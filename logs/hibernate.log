[DEBUG] 2018-03-26 16:43:39.491 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-03-26 16:43:39.492 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-03-26 16:43:39.495 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-03-26 16:43:39.541 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-03-26 16:43:39.542 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-03-26 16:43:39.561 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-03-26 16:43:39.561 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-03-26 16:43:39.564 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-03-26 16:43:39.706 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-03-26 16:43:39.720 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-03-26 16:43:39.726 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-03-26 16:43:39.740 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@68034211
[DEBUG] 2018-03-26 16:43:39.740 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@68034211
[DEBUG] 2018-03-26 16:43:39.741 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68034211
[DEBUG] 2018-03-26 16:43:39.741 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4167d97b
[DEBUG] 2018-03-26 16:43:39.742 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3e2059ae
[DEBUG] 2018-03-26 16:43:39.742 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@275bf9b3
[DEBUG] 2018-03-26 16:43:39.743 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@46271dd6
[DEBUG] 2018-03-26 16:43:39.743 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@46271dd6
[DEBUG] 2018-03-26 16:43:39.743 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46271dd6
[DEBUG] 2018-03-26 16:43:39.744 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@61eaec38
[DEBUG] 2018-03-26 16:43:39.744 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@61eaec38
[DEBUG] 2018-03-26 16:43:39.744 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61eaec38
[DEBUG] 2018-03-26 16:43:39.745 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7ef27d7f
[DEBUG] 2018-03-26 16:43:39.745 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7ef27d7f
[DEBUG] 2018-03-26 16:43:39.745 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ef27d7f
[DEBUG] 2018-03-26 16:43:39.746 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1d483de4
[DEBUG] 2018-03-26 16:43:39.746 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1d483de4
[DEBUG] 2018-03-26 16:43:39.746 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d483de4
[DEBUG] 2018-03-26 16:43:39.747 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@b83a9be
[DEBUG] 2018-03-26 16:43:39.747 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@b83a9be
[DEBUG] 2018-03-26 16:43:39.747 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@b83a9be
[DEBUG] 2018-03-26 16:43:39.748 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d3d101b
[DEBUG] 2018-03-26 16:43:39.748 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d3d101b
[DEBUG] 2018-03-26 16:43:39.748 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d3d101b
[DEBUG] 2018-03-26 16:43:39.749 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4b7dc788
[DEBUG] 2018-03-26 16:43:39.749 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4b7dc788
[DEBUG] 2018-03-26 16:43:39.749 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b7dc788
[DEBUG] 2018-03-26 16:43:39.750 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e403b4a
[DEBUG] 2018-03-26 16:43:39.750 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e403b4a
[DEBUG] 2018-03-26 16:43:39.751 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19e7a160
[DEBUG] 2018-03-26 16:43:39.751 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19e7a160
[DEBUG] 2018-03-26 16:43:39.752 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6cb6decd
[DEBUG] 2018-03-26 16:43:39.752 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6cb6decd
[DEBUG] 2018-03-26 16:43:39.752 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e6f3f28
[DEBUG] 2018-03-26 16:43:39.753 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5717c37
[DEBUG] 2018-03-26 16:43:39.753 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3c01cfa1
[DEBUG] 2018-03-26 16:43:39.753 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3c01cfa1
[DEBUG] 2018-03-26 16:43:39.754 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5b7a8434
[DEBUG] 2018-03-26 16:43:39.754 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5b7a8434
[DEBUG] 2018-03-26 16:43:39.764 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@9573584
[DEBUG] 2018-03-26 16:43:39.764 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@9573584
[DEBUG] 2018-03-26 16:43:39.765 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6853425f
[DEBUG] 2018-03-26 16:43:39.765 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6853425f
[DEBUG] 2018-03-26 16:43:39.767 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@68d279ec
[DEBUG] 2018-03-26 16:43:39.767 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@68d279ec
[DEBUG] 2018-03-26 16:43:39.768 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e74829
[DEBUG] 2018-03-26 16:43:39.768 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e74829
[DEBUG] 2018-03-26 16:43:39.769 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d286fb6
[DEBUG] 2018-03-26 16:43:39.769 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d286fb6
[DEBUG] 2018-03-26 16:43:39.770 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41005828
[DEBUG] 2018-03-26 16:43:39.770 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41005828
[DEBUG] 2018-03-26 16:43:39.772 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e423aa2
[DEBUG] 2018-03-26 16:43:39.772 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4e423aa2
[DEBUG] 2018-03-26 16:43:39.773 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3561c410
[DEBUG] 2018-03-26 16:43:39.773 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3561c410
[DEBUG] 2018-03-26 16:43:39.774 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@20f5281c
[DEBUG] 2018-03-26 16:43:39.774 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20f5281c
[DEBUG] 2018-03-26 16:43:39.775 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4397ad89
[DEBUG] 2018-03-26 16:43:39.775 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4397ad89
[DEBUG] 2018-03-26 16:43:39.775 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4397ad89
[DEBUG] 2018-03-26 16:43:39.776 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f19ac19
[DEBUG] 2018-03-26 16:43:39.776 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20c0a64d
[DEBUG] 2018-03-26 16:43:39.776 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20c0a64d
[DEBUG] 2018-03-26 16:43:39.776 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20c0a64d
[DEBUG] 2018-03-26 16:43:39.777 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f67593e
[DEBUG] 2018-03-26 16:43:39.777 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@82ea68c
[DEBUG] 2018-03-26 16:43:39.778 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@82ea68c
[DEBUG] 2018-03-26 16:43:39.778 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@8e50104
[DEBUG] 2018-03-26 16:43:39.778 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8e50104
[DEBUG] 2018-03-26 16:43:39.779 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@45a37759
[DEBUG] 2018-03-26 16:43:39.779 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45a37759
[DEBUG] 2018-03-26 16:43:39.779 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1838ccb8
[DEBUG] 2018-03-26 16:43:39.779 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1838ccb8
[DEBUG] 2018-03-26 16:43:39.780 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44d52de2
[DEBUG] 2018-03-26 16:43:39.780 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44d52de2
[DEBUG] 2018-03-26 16:43:39.781 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e44b638
[DEBUG] 2018-03-26 16:43:39.782 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@600b9d27
[DEBUG] 2018-03-26 16:43:39.782 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@600b9d27
[DEBUG] 2018-03-26 16:43:39.782 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@600b9d27
[DEBUG] 2018-03-26 16:43:39.782 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@345f69f3
[DEBUG] 2018-03-26 16:43:39.782 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@345f69f3
[DEBUG] 2018-03-26 16:43:39.782 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@345f69f3
[DEBUG] 2018-03-26 16:43:39.783 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@71e9ebae
[DEBUG] 2018-03-26 16:43:39.784 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@42530531
[DEBUG] 2018-03-26 16:43:39.784 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6bc407fd
[DEBUG] 2018-03-26 16:43:39.784 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6bc407fd
[DEBUG] 2018-03-26 16:43:39.784 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6bc407fd
[DEBUG] 2018-03-26 16:43:39.785 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ef5c734
[DEBUG] 2018-03-26 16:43:39.785 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ef5c734
[DEBUG] 2018-03-26 16:43:39.785 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ef5c734
[DEBUG] 2018-03-26 16:43:39.785 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3697186
[DEBUG] 2018-03-26 16:43:39.786 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@46b61c56
[DEBUG] 2018-03-26 16:43:39.788 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6239aba6
[DEBUG] 2018-03-26 16:43:39.788 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6239aba6
[DEBUG] 2018-03-26 16:43:39.789 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@68df9280
[DEBUG] 2018-03-26 16:43:39.791 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5c44c582
[DEBUG] 2018-03-26 16:43:39.791 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5c44c582
[DEBUG] 2018-03-26 16:43:39.793 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@558bdf1f
[DEBUG] 2018-03-26 16:43:39.793 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@558bdf1f
[DEBUG] 2018-03-26 16:43:39.793 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67545b57
[DEBUG] 2018-03-26 16:43:39.793 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3daf7722
[DEBUG] 2018-03-26 16:43:39.794 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1869fbd2
[DEBUG] 2018-03-26 16:43:39.796 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5a2d131d
[DEBUG] 2018-03-26 16:43:39.796 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a2d131d
[DEBUG] 2018-03-26 16:43:39.797 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@512baff6
[DEBUG] 2018-03-26 16:43:39.797 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@632ceb35
[DEBUG] 2018-03-26 16:43:39.797 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c93f6e1
[DEBUG] 2018-03-26 16:43:39.797 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1800a575
[DEBUG] 2018-03-26 16:43:39.797 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1458ed9c
[DEBUG] 2018-03-26 16:43:39.797 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10a9d961
[DEBUG] 2018-03-26 16:43:39.797 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@130e116b
[DEBUG] 2018-03-26 16:43:39.797 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e383572
[INFO ] 2018-03-26 16:43:39.803 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hearthstone
[INFO ] 2018-03-26 16:43:39.803 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-03-26 16:43:39.803 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-03-26 16:43:39.876 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-03-26 16:43:39.918 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.21-0ubuntu0.16.04.1
      major : 5
      minor : 7
[DEBUG] 2018-03-26 16:43:39.918 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-03-26 16:43:39.918 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-03-26 16:43:39.927 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-03-26 16:43:39.954 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-03-26 16:43:39.956 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-03-26 16:43:39.985 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-03-26 16:43:39.985 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-03-26 16:43:39.986 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-03-26 16:43:39.986 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-03-26 16:43:39.986 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-03-26 16:43:39.987 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-03-26 16:43:39.987 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-03-26 16:43:39.988 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-03-26 16:43:39.989 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-03-26 16:43:39.989 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-03-26 16:43:39.989 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-03-26 16:43:39.990 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-03-26 16:43:39.990 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-03-26 16:43:39.990 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-03-26 16:43:40.017 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-03-26 16:43:40.040 [main] AnnotationBinder - Binding entity from annotated class: com.hearthstone.entity.Deck
[DEBUG] 2018-03-26 16:43:40.056 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-03-26 16:43:40.060 [main] EntityBinder - Import with entity name Deck
[DEBUG] 2018-03-26 16:43:40.062 [main] EntityBinder - Bind entity com.hearthstone.entity.Deck on table deck
[DEBUG] 2018-03-26 16:43:40.083 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.085 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-03-26 16:43:40.087 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:id]
[DEBUG] 2018-03-26 16:43:40.087 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-03-26 16:43:40.089 [main] PropertyBinder - Building property id
[DEBUG] 2018-03-26 16:43:40.093 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.093 [main] PropertyBinder - MetadataSourceProcessor property card_set with lazy=false
[DEBUG] 2018-03-26 16:43:40.093 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:card_set]
[DEBUG] 2018-03-26 16:43:40.093 [main] SimpleValueBinder - building SimpleValue for card_set
[DEBUG] 2018-03-26 16:43:40.093 [main] PropertyBinder - Building property card_set
[DEBUG] 2018-03-26 16:43:40.093 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=mana_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.093 [main] PropertyBinder - MetadataSourceProcessor property mana_cost with lazy=false
[DEBUG] 2018-03-26 16:43:40.093 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:mana_cost]
[DEBUG] 2018-03-26 16:43:40.094 [main] SimpleValueBinder - building SimpleValue for mana_cost
[DEBUG] 2018-03-26 16:43:40.094 [main] PropertyBinder - Building property mana_cost
[DEBUG] 2018-03-26 16:43:40.094 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.094 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-03-26 16:43:40.094 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:name]
[DEBUG] 2018-03-26 16:43:40.094 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-03-26 16:43:40.094 [main] PropertyBinder - Building property name
[DEBUG] 2018-03-26 16:43:40.094 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.094 [main] PropertyBinder - MetadataSourceProcessor property rarity with lazy=false
[DEBUG] 2018-03-26 16:43:40.094 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:rarity]
[DEBUG] 2018-03-26 16:43:40.094 [main] SimpleValueBinder - building SimpleValue for rarity
[DEBUG] 2018-03-26 16:43:40.094 [main] PropertyBinder - Building property rarity
[DEBUG] 2018-03-26 16:43:40.095 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-03-26 16:43:40.095 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=stats, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.096 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.103 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.103 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=stats_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.104 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='stats_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-03-26 16:43:40.104 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-03-26 16:43:40.104 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-03-26 16:43:40.105 [main] CollectionBinder - Collection role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.107 [main] PropertyBinder - Building property stats
[DEBUG] 2018-03-26 16:43:40.108 [main] AnnotationBinder - Binding entity from annotated class: com.hearthstone.entity.Stats
[DEBUG] 2018-03-26 16:43:40.108 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-03-26 16:43:40.108 [main] EntityBinder - Import with entity name Stats
[DEBUG] 2018-03-26 16:43:40.108 [main] EntityBinder - Bind entity com.hearthstone.entity.Stats on table stats
[DEBUG] 2018-03-26 16:43:40.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.110 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-03-26 16:43:40.110 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Stats:id]
[DEBUG] 2018-03-26 16:43:40.110 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-03-26 16:43:40.110 [main] PropertyBinder - Building property id
[DEBUG] 2018-03-26 16:43:40.110 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-03-26 16:43:40.110 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=deck, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.111 [main] PropertyBinder - Building property deck
[DEBUG] 2018-03-26 16:43:40.111 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-03-26 16:43:40.111 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2018-03-26 16:43:40.112 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Stats:description]
[DEBUG] 2018-03-26 16:43:40.112 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2018-03-26 16:43:40.112 [main] PropertyBinder - Building property description
[DEBUG] 2018-03-26 16:43:40.112 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-03-26 16:43:40.112 [main] SimpleValueBinder - Starting fillSimpleValue for card_set
[DEBUG] 2018-03-26 16:43:40.112 [main] SimpleValueBinder - Starting fillSimpleValue for mana_cost
[DEBUG] 2018-03-26 16:43:40.112 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-03-26 16:43:40.112 [main] SimpleValueBinder - Starting fillSimpleValue for rarity
[DEBUG] 2018-03-26 16:43:40.112 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-03-26 16:43:40.113 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2018-03-26 16:43:40.116 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [deck]
[DEBUG] 2018-03-26 16:43:40.116 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [stats]
[DEBUG] 2018-03-26 16:43:40.116 [main] CollectionSecondPass - Second pass for collection: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.117 [main] CollectionBinder - Binding a OneToMany: com.hearthstone.entity.Deck.stats through a foreign key
[DEBUG] 2018-03-26 16:43:40.117 [main] CollectionBinder - Mapping collection: com.hearthstone.entity.Deck.stats -> stats
[DEBUG] 2018-03-26 16:43:40.118 [main] TableBinder - Retrieving property com.hearthstone.entity.Stats.deck
[DEBUG] 2018-03-26 16:43:40.118 [main] CollectionSecondPass - Mapped collection key: deck_id, one-to-many: com.hearthstone.entity.Stats
[DEBUG] 2018-03-26 16:43:40.118 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.hearthstone.entity.Deck
[DEBUG] 2018-03-26 16:43:40.120 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.hearthstone.entity.Deck
[DEBUG] 2018-03-26 16:43:40.146 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - SessionFactory name : null
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Statistics: disabled
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-03-26 16:43:40.147 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Named query checking : enabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@514eedd8
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-03-26 16:43:40.148 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-03-26 16:43:40.187 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-03-26 16:43:40.187 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/IdeaProjects/hearthstoneDeckTracker1/target/test-classes:/home/student/IdeaProjects/hearthstoneDeckTracker1/target/classes:/home/student/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.9.0/jackson-jaxrs-1.9.0.jar:/home/student/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.0/jackson-core-asl-1.9.0.jar:/home/student/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.0/jackson-mapper-asl-1.9.0.jar:/home/student/.m2/repository/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.23.2/jersey-container-servlet-2.23.2.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.23.2/jersey-container-servlet-core-2.23.2.jar:/home/student/.m2/repository/org/glassfish/hk2/external/javax.inject/2.5.0-b05/javax.inject-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.23.2/jersey-common-2.23.2.jar:/home/student/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/student/.m2/repository/org/glassfish/jersey/bundles/repackaged/jersey-guava/2.23.2/jersey-guava-2.23.2.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.5.0-b05/hk2-api-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.5.0-b05/hk2-utils-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.5.0-b05/aopalliance-repackaged-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.5.0-b05/hk2-locator-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.23.2/jersey-server-2.23.2.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.23.2/jersey-client-2.23.2.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.23.2/jersey-media-jaxb-2.23.2.jar:/home/student/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/student/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/student/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/student/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/home/student/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/home/student/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.1.0/junit-jupiter-api-5.1.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.1.0/junit-platform-commons-1.1.0.jar:, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, sun.java.command=/home/student/IdeaProjects/hearthstoneDeckTracker1/target/surefire/surefirebooter7953820972823460004.jar /home/student/IdeaProjects/hearthstoneDeckTracker1/target/surefire/surefire8921889976051941981tmp /home/student/IdeaProjects/hearthstoneDeckTracker1/target/surefire/surefire_05747693073329502994tmp, surefire.test.class.path=/home/student/IdeaProjects/hearthstoneDeckTracker1/target/test-classes:/home/student/IdeaProjects/hearthstoneDeckTracker1/target/classes:/home/student/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.9.0/jackson-jaxrs-1.9.0.jar:/home/student/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.0/jackson-core-asl-1.9.0.jar:/home/student/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.0/jackson-mapper-asl-1.9.0.jar:/home/student/.m2/repository/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.23.2/jersey-container-servlet-2.23.2.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.23.2/jersey-container-servlet-core-2.23.2.jar:/home/student/.m2/repository/org/glassfish/hk2/external/javax.inject/2.5.0-b05/javax.inject-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.23.2/jersey-common-2.23.2.jar:/home/student/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/student/.m2/repository/org/glassfish/jersey/bundles/repackaged/jersey-guava/2.23.2/jersey-guava-2.23.2.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.5.0-b05/hk2-api-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.5.0-b05/hk2-utils-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.5.0-b05/aopalliance-repackaged-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.5.0-b05/hk2-locator-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.23.2/jersey-server-2.23.2.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.23.2/jersey-client-2.23.2.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.23.2/jersey-media-jaxb-2.23.2.jar:/home/student/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/student/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/student/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/student/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/home/student/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/home/student/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.1.0/junit-jupiter-api-5.1.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.1.0/junit-platform-commons-1.1.0.jar:, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=/home/student, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-oracle/jre, basedir=/home/student/IdeaProjects/hearthstoneDeckTracker1, file.separator=/, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, surefire.real.class.path=/home/student/IdeaProjects/hearthstoneDeckTracker1/target/surefire/surefirebooter7953820972823460004.jar, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_144-b01, user.name=student, path.separator=:, hibernate.connection.username=root, os.version=4.4.0-112-generic, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hearthstone, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, localRepository=/home/student/.m2/repository, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, idea.version=2017.2.6, java.version=1.8.0_144, user.dir=/home/student/IdeaProjects/hearthstoneDeckTracker1, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@69c43e48, java.library.path=/home/student/intellij/bin::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.144-b01, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hearthstone, java.class.version=52.0}
[DEBUG] 2018-03-26 16:43:40.200 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-03-26 16:43:40.201 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-03-26 16:43:40.202 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-03-26 16:43:40.232 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Stats] is safe
[DEBUG] 2018-03-26 16:43:40.232 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Stats
[DEBUG] 2018-03-26 16:43:40.243 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Stats] is safe
[DEBUG] 2018-03-26 16:43:40.243 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Stats
[DEBUG] 2018-03-26 16:43:40.280 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Deck] is safe
[DEBUG] 2018-03-26 16:43:40.280 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Deck
[DEBUG] 2018-03-26 16:43:40.282 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Deck] is safe
[DEBUG] 2018-03-26 16:43:40.282 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Deck
[DEBUG] 2018-03-26 16:43:40.292 [main] AbstractCollectionPersister - Static SQL for collection: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.293 [main] AbstractCollectionPersister -  Row insert: update stats set deck_id=? where id=?
[DEBUG] 2018-03-26 16:43:40.293 [main] AbstractCollectionPersister -  Row update: update stats set  where id=?
[DEBUG] 2018-03-26 16:43:40.293 [main] AbstractCollectionPersister -  Row delete: update stats set deck_id=null where deck_id=? and id=?
[DEBUG] 2018-03-26 16:43:40.293 [main] AbstractCollectionPersister -  One-shot delete: update stats set deck_id=null where deck_id=?
[DEBUG] 2018-03-26 16:43:40.296 [main] AbstractEntityPersister - Static SQL for entity: com.hearthstone.entity.Stats
[DEBUG] 2018-03-26 16:43:40.296 [main] AbstractEntityPersister -  Version select: select id from stats where id =?
[DEBUG] 2018-03-26 16:43:40.296 [main] AbstractEntityPersister -  Snapshot select: select stats_.id, stats_.deck_id as deck_id3_1_, stats_.description as descript2_1_ from stats stats_ where stats_.id=?
[DEBUG] 2018-03-26 16:43:40.296 [main] AbstractEntityPersister -  Insert 0: insert into stats (deck_id, description, id) values (?, ?, ?)
[DEBUG] 2018-03-26 16:43:40.296 [main] AbstractEntityPersister -  Update 0: update stats set deck_id=?, description=? where id=?
[DEBUG] 2018-03-26 16:43:40.296 [main] AbstractEntityPersister -  Delete 0: delete from stats where id=?
[DEBUG] 2018-03-26 16:43:40.296 [main] AbstractEntityPersister -  Identity insert: insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-03-26 16:43:40.310 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@701a32]
[DEBUG] 2018-03-26 16:43:40.311 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.314 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51745f40]
[DEBUG] 2018-03-26 16:43:40.315 [main] MetamodelGraphWalker - Visiting attribute path : deck.card_set
[DEBUG] 2018-03-26 16:43:40.315 [main] MetamodelGraphWalker - Visiting attribute path : deck.mana_cost
[DEBUG] 2018-03-26 16:43:40.315 [main] MetamodelGraphWalker - Visiting attribute path : deck.name
[DEBUG] 2018-03-26 16:43:40.315 [main] MetamodelGraphWalker - Visiting attribute path : deck.rarity
[DEBUG] 2018-03-26 16:43:40.315 [main] MetamodelGraphWalker - Visiting attribute path : deck.stats
[DEBUG] 2018-03-26 16:43:40.315 [main] MetamodelGraphWalker - Property path deemed to be circular : deck.stats
[DEBUG] 2018-03-26 16:43:40.315 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.315 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.324 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.328 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(deck)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Deck)
                - SQL table alias mapping - deck1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2018-03-26 16:43:40.330 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [NONE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-03-26 16:43:40.330 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
[DEBUG] 2018-03-26 16:43:40.330 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.330 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[DEBUG] 2018-03-26 16:43:40.330 [main] MetamodelGraphWalker - Visiting attribute path : deck.card_set
[DEBUG] 2018-03-26 16:43:40.330 [main] MetamodelGraphWalker - Visiting attribute path : deck.mana_cost
[DEBUG] 2018-03-26 16:43:40.330 [main] MetamodelGraphWalker - Visiting attribute path : deck.name
[DEBUG] 2018-03-26 16:43:40.330 [main] MetamodelGraphWalker - Visiting attribute path : deck.rarity
[DEBUG] 2018-03-26 16:43:40.330 [main] MetamodelGraphWalker - Visiting attribute path : deck.stats
[DEBUG] 2018-03-26 16:43:40.330 [main] MetamodelGraphWalker - Property path deemed to be circular : deck.stats
[DEBUG] 2018-03-26 16:43:40.330 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.330 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.331 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.331 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(deck)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Deck)
                - SQL table alias mapping - deck1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2018-03-26 16:43:40.331 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [READ]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-03-26 16:43:40.331 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
[DEBUG] 2018-03-26 16:43:40.331 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.331 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
[DEBUG] 2018-03-26 16:43:40.331 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.331 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.331 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.332 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-03-26 16:43:40.332 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.332 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bd2029]
[DEBUG] 2018-03-26 16:43:40.332 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.332 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e8fadb0]
[DEBUG] 2018-03-26 16:43:40.332 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.332 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.332 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.332 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-03-26 16:43:40.332 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE_NOWAIT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.332 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
[DEBUG] 2018-03-26 16:43:40.332 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.332 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3e6d34]
[DEBUG] 2018-03-26 16:43:40.332 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.332 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.333 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.333 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-03-26 16:43:40.333 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE_SKIPLOCKED]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.333 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[DEBUG] 2018-03-26 16:43:40.333 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.333 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464a4442]
[DEBUG] 2018-03-26 16:43:40.333 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.333 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.333 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.334 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-03-26 16:43:40.334 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [FORCE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.334 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
[DEBUG] 2018-03-26 16:43:40.334 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.334 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577f9109]
[DEBUG] 2018-03-26 16:43:40.334 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.334 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.334 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.334 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-03-26 16:43:40.334 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_READ]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? lock in share mode
[DEBUG] 2018-03-26 16:43:40.334 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4303b7f0]
[DEBUG] 2018-03-26 16:43:40.334 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.334 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@779de014]
[DEBUG] 2018-03-26 16:43:40.334 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.335 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.335 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.335 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-03-26 16:43:40.335 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_WRITE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.335 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[DEBUG] 2018-03-26 16:43:40.335 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.335 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec77191]
[DEBUG] 2018-03-26 16:43:40.335 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.335 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.335 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.336 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-03-26 16:43:40.336 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_FORCE_INCREMENT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.336 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[DEBUG] 2018-03-26 16:43:40.336 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.336 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c68a5f8]
[DEBUG] 2018-03-26 16:43:40.336 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.336 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.336 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.336 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-03-26 16:43:40.336 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [OPTIMISTIC]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-03-26 16:43:40.336 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[DEBUG] 2018-03-26 16:43:40.336 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.336 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1792e7]
[DEBUG] 2018-03-26 16:43:40.336 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.336 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.337 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.337 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-03-26 16:43:40.337 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [OPTIMISTIC_FORCE_INCREMENT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-03-26 16:43:40.347 [main] Loader - Static select for action ACTION_MERGE on entity com.hearthstone.entity.Stats: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-03-26 16:43:40.347 [main] Loader - Static select for action ACTION_REFRESH on entity com.hearthstone.entity.Stats: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-03-26 16:43:40.347 [main] AbstractEntityPersister - Static SQL for entity: com.hearthstone.entity.Deck
[DEBUG] 2018-03-26 16:43:40.347 [main] AbstractEntityPersister -  Version select: select id from deck where id =?
[DEBUG] 2018-03-26 16:43:40.347 [main] AbstractEntityPersister -  Snapshot select: select deck_.id, deck_.card_set as card_set2_0_, deck_.mana_cost as mana_cos3_0_, deck_.name as name4_0_, deck_.rarity as rarity5_0_ from deck deck_ where deck_.id=?
[DEBUG] 2018-03-26 16:43:40.348 [main] AbstractEntityPersister -  Insert 0: insert into deck (card_set, mana_cost, name, rarity, id) values (?, ?, ?, ?, ?)
[DEBUG] 2018-03-26 16:43:40.348 [main] AbstractEntityPersister -  Update 0: update deck set card_set=?, mana_cost=?, name=?, rarity=? where id=?
[DEBUG] 2018-03-26 16:43:40.348 [main] AbstractEntityPersister -  Delete 0: delete from deck where id=?
[DEBUG] 2018-03-26 16:43:40.348 [main] AbstractEntityPersister -  Identity insert: insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-03-26 16:43:40.348 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375b5b7f]
[DEBUG] 2018-03-26 16:43:40.348 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.348 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.348 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.348 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.348 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.348 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56781d96]
[DEBUG] 2018-03-26 16:43:40.350 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a411233]
[DEBUG] 2018-03-26 16:43:40.350 [main] MetamodelGraphWalker - Visiting attribute path : stats.deck
[DEBUG] 2018-03-26 16:43:40.351 [main] MetamodelGraphWalker - Property path deemed to be circular : stats.deck
[DEBUG] 2018-03-26 16:43:40.351 [main] MetamodelGraphWalker - Visiting attribute path : stats.description
[DEBUG] 2018-03-26 16:43:40.351 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.351 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.353 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(stats)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.hearthstone.entity.Deck.stats)
                - SQL table alias mapping - stats1_
                - alias suffix - 1_
                - suffixed key columns - {deck_id3_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.hearthstone.entity.Stats)
                      - SQL table alias mapping - stats1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2018-03-26 16:43:40.353 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [NONE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.353 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63429932]
[DEBUG] 2018-03-26 16:43:40.353 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.353 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.353 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.353 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.353 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.353 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c9d82f9]
[DEBUG] 2018-03-26 16:43:40.353 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f012914]
[DEBUG] 2018-03-26 16:43:40.353 [main] MetamodelGraphWalker - Visiting attribute path : stats.deck
[DEBUG] 2018-03-26 16:43:40.354 [main] MetamodelGraphWalker - Property path deemed to be circular : stats.deck
[DEBUG] 2018-03-26 16:43:40.354 [main] MetamodelGraphWalker - Visiting attribute path : stats.description
[DEBUG] 2018-03-26 16:43:40.354 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.354 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.354 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(stats)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.hearthstone.entity.Deck.stats)
                - SQL table alias mapping - stats1_
                - alias suffix - 1_
                - suffixed key columns - {deck_id3_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.hearthstone.entity.Stats)
                      - SQL table alias mapping - stats1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2018-03-26 16:43:40.354 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [READ]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.355 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60baef24]
[DEBUG] 2018-03-26 16:43:40.355 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.355 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.355 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.355 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.355 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.355 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@732bb66d]
[DEBUG] 2018-03-26 16:43:40.355 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@720653c2]
[DEBUG] 2018-03-26 16:43:40.355 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.355 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.355 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-03-26 16:43:40.355 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.355 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f24169]
[DEBUG] 2018-03-26 16:43:40.355 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.355 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.356 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.356 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.356 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.356 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4463d9d3]
[DEBUG] 2018-03-26 16:43:40.356 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43b0ade]
[DEBUG] 2018-03-26 16:43:40.356 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.356 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.356 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-03-26 16:43:40.356 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE_NOWAIT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.356 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5395ea39]
[DEBUG] 2018-03-26 16:43:40.356 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.356 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.356 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.356 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.356 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.356 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fe01803]
[DEBUG] 2018-03-26 16:43:40.356 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13d186db]
[DEBUG] 2018-03-26 16:43:40.357 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.357 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.357 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-03-26 16:43:40.357 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE_SKIPLOCKED]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.357 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6962ba]
[DEBUG] 2018-03-26 16:43:40.357 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.357 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.357 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.357 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.357 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.357 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a0a9fa5]
[DEBUG] 2018-03-26 16:43:40.357 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15723761]
[DEBUG] 2018-03-26 16:43:40.357 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.357 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.358 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-03-26 16:43:40.358 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [FORCE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.358 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@312afbc7]
[DEBUG] 2018-03-26 16:43:40.358 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.358 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.358 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.358 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.358 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.358 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b60c3e]
[DEBUG] 2018-03-26 16:43:40.358 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fbfa96]
[DEBUG] 2018-03-26 16:43:40.358 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.358 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.358 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-03-26 16:43:40.358 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_READ]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? lock in share mode
[DEBUG] 2018-03-26 16:43:40.358 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6569dded]
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.359 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@710d7aff]
[DEBUG] 2018-03-26 16:43:40.359 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d7e1102]
[DEBUG] 2018-03-26 16:43:40.359 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.359 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.359 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-03-26 16:43:40.359 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_WRITE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.359 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65327f5]
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.359 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.359 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@301d8120]
[DEBUG] 2018-03-26 16:43:40.359 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d367020]
[DEBUG] 2018-03-26 16:43:40.359 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.360 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.360 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-03-26 16:43:40.360 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_FORCE_INCREMENT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-03-26 16:43:40.360 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72458efc]
[DEBUG] 2018-03-26 16:43:40.360 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.360 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.360 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.360 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.360 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.360 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a74d228]
[DEBUG] 2018-03-26 16:43:40.360 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@349d0836]
[DEBUG] 2018-03-26 16:43:40.360 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.361 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.361 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-03-26 16:43:40.361 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [OPTIMISTIC]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.361 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a714237]
[DEBUG] 2018-03-26 16:43:40.361 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-03-26 16:43:40.361 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-03-26 16:43:40.361 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-03-26 16:43:40.361 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-03-26 16:43:40.361 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-03-26 16:43:40.361 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72ba28ee]
[DEBUG] 2018-03-26 16:43:40.361 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e3a5237]
[DEBUG] 2018-03-26 16:43:40.361 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.361 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.362 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-03-26 16:43:40.362 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [OPTIMISTIC_FORCE_INCREMENT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.362 [main] Loader - Static select for action ACTION_MERGE on entity com.hearthstone.entity.Deck: select deck0_.id as id1_0_1_, deck0_.card_set as card_set2_0_1_, deck0_.mana_cost as mana_cos3_0_1_, deck0_.name as name4_0_1_, deck0_.rarity as rarity5_0_1_, stats1_.deck_id as deck_id3_1_3_, stats1_.id as id1_1_3_, stats1_.id as id1_1_0_, stats1_.deck_id as deck_id3_1_0_, stats1_.description as descript2_1_0_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.363 [main] Loader - Static select for action ACTION_REFRESH on entity com.hearthstone.entity.Deck: select deck0_.id as id1_0_1_, deck0_.card_set as card_set2_0_1_, deck0_.mana_cost as mana_cos3_0_1_, deck0_.name as name4_0_1_, deck0_.rarity as rarity5_0_1_, stats1_.deck_id as deck_id3_1_3_, stats1_.id as id1_1_3_, stats1_.id as id1_1_0_, stats1_.deck_id as deck_id3_1_0_, stats1_.description as descript2_1_0_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.366 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cbb84b1]
[DEBUG] 2018-03-26 16:43:40.366 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c779e5]
[DEBUG] 2018-03-26 16:43:40.366 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-03-26 16:43:40.366 [main] MetamodelGraphWalker - Property path deemed to be circular : deck
[DEBUG] 2018-03-26 16:43:40.366 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-03-26 16:43:40.366 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-03-26 16:43:40.368 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-03-26 16:43:40.368 [main] LoadPlanTreePrinter - LoadPlan(collection=com.hearthstone.entity.Deck.stats)
    - Returns
       - CollectionReturnImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:0>, path=[com.hearthstone.entity.Deck.stats])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:1>, path=[com.hearthstone.entity.Deck.stats].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.hearthstone.entity.Deck.stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {deck_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Stats)
                - SQL table alias mapping - stats0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2018-03-26 16:43:40.368 [main] CollectionLoader - Static select for collection com.hearthstone.entity.Deck.stats: select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-03-26 16:43:40.387 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-03-26 16:43:40.387 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-03-26 16:43:40.388 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-03-26 16:43:40.391 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-03-26 16:43:40.391 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-03-26 16:43:40.391 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-03-26 16:43:40.393 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d6aca33
[DEBUG] 2018-03-26 16:43:40.394 [main] SessionFactoryRegistry - Registering SessionFactory: 13acbe02-05de-43c3-a465-0fda4657b82e (<unnamed>)
[DEBUG] 2018-03-26 16:43:40.394 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-03-26 16:43:40.448 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-03-26 16:43:40.468 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Deck as generatedAlias0
[DEBUG] 2018-03-26 16:43:40.481 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7ec58feb
[INFO ] 2018-03-26 16:43:40.481 [main] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2018-03-26 16:43:40.502 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.hearthstone.entity.Deck as generatedAlias0
[DEBUG] 2018-03-26 16:43:40.506 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-03-26 16:43:40.508 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'hearthstone'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Deck'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-03-26 16:43:40.523 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-03-26 16:43:40.532 [main] FromElement - FromClause{level=1} : com.hearthstone.entity.Deck (generatedAlias0) -> deck0_
[DEBUG] 2018-03-26 16:43:40.533 [main] FromReferenceNode - Resolved : generatedAlias0 -> deck0_.id
[DEBUG] 2018-03-26 16:43:40.534 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-03-26 16:43:40.534 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} deck0_.id ) ( FromClause{level=1} deck deck0_ ) )
[DEBUG] 2018-03-26 16:43:40.540 [main] JoinProcessor - Using FROM fragment [deck deck0_]
[DEBUG] 2018-03-26 16:43:40.540 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-03-26 16:43:40.541 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (deck)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'deck0_.id as id1_0_' {alias=generatedAlias0, className=com.hearthstone.entity.Deck, tableAlias=deck0_}
    |  \-[SQL_TOKEN] SqlFragment: 'deck0_.card_set as card_set2_0_, deck0_.mana_cost as mana_cos3_0_, deck0_.name as name4_0_, deck0_.rarity as rarity5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[deck0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'deck deck0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=deck,tableAlias=deck0_,origin=null,columns={,className=com.hearthstone.entity.Deck}}

[DEBUG] 2018-03-26 16:43:40.541 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-03-26 16:43:40.545 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.hearthstone.entity.Deck as generatedAlias0
[DEBUG] 2018-03-26 16:43:40.546 [main] QueryTranslatorImpl - SQL: select deck0_.id as id1_0_, deck0_.card_set as card_set2_0_, deck0_.mana_cost as mana_cos3_0_, deck0_.name as name4_0_, deck0_.rarity as rarity5_0_ from deck deck0_
[DEBUG] 2018-03-26 16:43:40.546 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-03-26 16:43:40.558 [main] SQL - select deck0_.id as id1_0_, deck0_.card_set as card_set2_0_, deck0_.mana_cost as mana_cos3_0_, deck0_.name as name4_0_, deck0_.rarity as rarity5_0_ from deck deck0_
[DEBUG] 2018-03-26 16:43:40.576 [main] Loader - Result set row: 0
[DEBUG] 2018-03-26 16:43:40.578 [main] Loader - Result row: EntityKey[com.hearthstone.entity.Deck#1]
[DEBUG] 2018-03-26 16:43:40.639 [main] Loader - Result set row: 1
[DEBUG] 2018-03-26 16:43:40.639 [main] Loader - Result row: EntityKey[com.hearthstone.entity.Deck#2]
[DEBUG] 2018-03-26 16:43:40.639 [main] Loader - Result set row: 2
[DEBUG] 2018-03-26 16:43:40.639 [main] Loader - Result row: EntityKey[com.hearthstone.entity.Deck#3]
[DEBUG] 2018-03-26 16:43:40.639 [main] Loader - Result set row: 3
[DEBUG] 2018-03-26 16:43:40.639 [main] Loader - Result row: EntityKey[com.hearthstone.entity.Deck#4]
[DEBUG] 2018-03-26 16:43:40.639 [main] Loader - Result set row: 4
[DEBUG] 2018-03-26 16:43:40.640 [main] Loader - Result row: EntityKey[com.hearthstone.entity.Deck#5]
[DEBUG] 2018-03-26 16:43:40.640 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-03-26 16:43:40.647 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-03-26 16:43:40.647 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#2]
[DEBUG] 2018-03-26 16:43:40.647 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#2]
[DEBUG] 2018-03-26 16:43:40.647 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#3]
[DEBUG] 2018-03-26 16:43:40.647 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#3]
[DEBUG] 2018-03-26 16:43:40.648 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#4]
[DEBUG] 2018-03-26 16:43:40.648 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#4]
[DEBUG] 2018-03-26 16:43:40.648 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#5]
[DEBUG] 2018-03-26 16:43:40.648 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#5]
[DEBUG] 2018-03-26 16:43:40.650 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#5]
[DEBUG] 2018-03-26 16:43:40.650 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-03-26 16:43:40.652 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#5]
[DEBUG] 2018-03-26 16:43:40.655 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.655 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#5]
[DEBUG] 2018-03-26 16:43:40.655 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.655 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.655 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-03-26 16:43:40.655 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#4]
[DEBUG] 2018-03-26 16:43:40.655 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-03-26 16:43:40.656 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#4]
[DEBUG] 2018-03-26 16:43:40.656 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.656 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#4]
[DEBUG] 2018-03-26 16:43:40.656 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.656 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.656 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-03-26 16:43:40.656 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#3]
[DEBUG] 2018-03-26 16:43:40.656 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-03-26 16:43:40.657 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#3]
[DEBUG] 2018-03-26 16:43:40.657 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.657 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#3]
[DEBUG] 2018-03-26 16:43:40.657 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.657 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.657 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-03-26 16:43:40.658 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#2]
[DEBUG] 2018-03-26 16:43:40.658 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-03-26 16:43:40.658 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#2]
[DEBUG] 2018-03-26 16:43:40.658 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.658 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#2]
[DEBUG] 2018-03-26 16:43:40.658 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.658 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.658 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-03-26 16:43:40.658 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-03-26 16:43:40.658 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-03-26 16:43:40.659 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-03-26 16:43:40.659 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.659 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-03-26 16:43:40.659 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.660 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.660 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-03-26 16:43:40.663 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.714 [main] TransactionImpl - begin
[DEBUG] 2018-03-26 16:43:40.720 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-03-26 16:43:40.722 [main] SQL - insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-03-26 16:43:40.727 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2018-03-26 16:43:40.727 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.729 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-03-26 16:43:40.729 [main] SQL - insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-03-26 16:43:40.730 [main] IdentifierGeneratorHelper - Natively generated identity: 1
[DEBUG] 2018-03-26 16:43:40.730 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.733 [main] TransactionImpl - committing
[DEBUG] 2018-03-26 16:43:40.733 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-03-26 16:43:40.734 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-03-26 16:43:40.736 [main] Collections - Collection found: [com.hearthstone.entity.Deck.stats#6], was: [<unreferenced>] (initialized)
[DEBUG] 2018-03-26 16:43:40.737 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2018-03-26 16:43:40.737 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-03-26 16:43:40.738 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-03-26 16:43:40.739 [main] EntityPrinter - com.hearthstone.entity.Deck{card_set=Basic, stats=[com.hearthstone.entity.Stats#1], mana_cost=4, name=Auchenai Soulpriest, id=6, rarity=Rare}
[DEBUG] 2018-03-26 16:43:40.739 [main] EntityPrinter - com.hearthstone.entity.Stats{deck=com.hearthstone.entity.Deck#6, description=Stat1, id=1}
[DEBUG] 2018-03-26 16:43:40.742 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.742 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.745 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.747 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-03-26 16:43:40.747 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-03-26 16:43:40.748 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-03-26 16:43:40.749 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#6]
[DEBUG] 2018-03-26 16:43:40.749 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#6]
[DEBUG] 2018-03-26 16:43:40.749 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#1]
[DEBUG] 2018-03-26 16:43:40.749 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#1]
[DEBUG] 2018-03-26 16:43:40.749 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.749 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-03-26 16:43:40.749 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.749 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.749 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#6
[DEBUG] 2018-03-26 16:43:40.749 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.764 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.765 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-03-26 16:43:40.765 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-03-26 16:43:40.765 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.hearthstone.entity.Deck.stats#2]
[DEBUG] 2018-03-26 16:43:40.766 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#2]
[DEBUG] 2018-03-26 16:43:40.766 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#2]
[DEBUG] 2018-03-26 16:43:40.766 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.766 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#2]
[DEBUG] 2018-03-26 16:43:40.766 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.766 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.766 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#2
[DEBUG] 2018-03-26 16:43:40.766 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.785 [main] TransactionImpl - begin
[DEBUG] 2018-03-26 16:43:40.786 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-03-26 16:43:40.786 [main] SQL - insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-03-26 16:43:40.786 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2018-03-26 16:43:40.786 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.786 [main] TransactionImpl - committing
[DEBUG] 2018-03-26 16:43:40.787 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-03-26 16:43:40.787 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-03-26 16:43:40.787 [main] Collections - Collection found: [com.hearthstone.entity.Deck.stats#6], was: [<unreferenced>] (initialized)
[DEBUG] 2018-03-26 16:43:40.787 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-03-26 16:43:40.787 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-03-26 16:43:40.787 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-03-26 16:43:40.787 [main] EntityPrinter - com.hearthstone.entity.Deck{card_set=Basic, stats=[], mana_cost=4, name=Auchenai Soulpriest, id=6, rarity=Rare}
[DEBUG] 2018-03-26 16:43:40.790 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.790 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.790 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.791 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-03-26 16:43:40.791 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-03-26 16:43:40.791 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-03-26 16:43:40.791 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#6]
[DEBUG] 2018-03-26 16:43:40.791 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#6]
[DEBUG] 2018-03-26 16:43:40.792 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.792 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-03-26 16:43:40.792 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.792 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.792 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#6
[DEBUG] 2018-03-26 16:43:40.792 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.816 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-03-26 16:43:40.817 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-03-26 16:43:40.818 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-03-26 16:43:40.818 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-03-26 16:43:40.818 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-03-26 16:43:40.818 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-03-26 16:43:40.818 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.818 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-03-26 16:43:40.818 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.818 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.818 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#1
[DEBUG] 2018-03-26 16:43:40.818 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.821 [main] TransactionImpl - begin
[DEBUG] 2018-03-26 16:43:40.822 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-03-26 16:43:40.822 [main] SQL - insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-03-26 16:43:40.823 [main] IdentifierGeneratorHelper - Natively generated identity: 1
[DEBUG] 2018-03-26 16:43:40.824 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.824 [main] TransactionImpl - committing
[DEBUG] 2018-03-26 16:43:40.824 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-03-26 16:43:40.825 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-03-26 16:43:40.825 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-03-26 16:43:40.825 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-03-26 16:43:40.825 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-03-26 16:43:40.825 [main] EntityPrinter - com.hearthstone.entity.Stats{deck=com.hearthstone.entity.Deck#1, description=Control, id=1}
[DEBUG] 2018-03-26 16:43:40.827 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.827 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-03-26 16:43:40.828 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-03-26 16:43:40.829 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-03-26 16:43:40.829 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-03-26 16:43:40.829 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#1]
[DEBUG] 2018-03-26 16:43:40.829 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#1]
[DEBUG] 2018-03-26 16:43:40.829 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-03-26 16:43:40.829 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-03-26 16:43:40.829 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.829 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-03-26 16:43:40.829 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-03-26 16:43:40.830 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-03-26 16:43:40.830 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-03-26 16:43:40.830 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-03-26 16:43:40.830 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.830 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-03-26 16:43:40.830 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-03-26 16:43:40.830 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-03-26 16:43:40.830 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-03-26 16:43:40.830 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#1
[DEBUG] 2018-03-26 16:43:40.830 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
