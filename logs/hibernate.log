[DEBUG] 2018-04-02 21:10:33.369 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-04-02 21:10:33.374 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-04-02 21:10:33.377 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-04-02 21:10:33.449 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-04-02 21:10:33.450 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-04-02 21:10:33.471 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-04-02 21:10:33.472 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-04-02 21:10:33.477 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-04-02 21:10:33.633 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-04-02 21:10:33.647 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-04-02 21:10:33.653 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-04-02 21:10:33.681 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@69504ae9
[DEBUG] 2018-04-02 21:10:33.681 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@69504ae9
[DEBUG] 2018-04-02 21:10:33.681 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@69504ae9
[DEBUG] 2018-04-02 21:10:33.682 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@126253fd
[DEBUG] 2018-04-02 21:10:33.682 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1807f5a7
[DEBUG] 2018-04-02 21:10:33.684 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4dc27487
[DEBUG] 2018-04-02 21:10:33.685 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7dfb0c0f
[DEBUG] 2018-04-02 21:10:33.685 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7dfb0c0f
[DEBUG] 2018-04-02 21:10:33.685 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7dfb0c0f
[DEBUG] 2018-04-02 21:10:33.686 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@d23e042
[DEBUG] 2018-04-02 21:10:33.686 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@d23e042
[DEBUG] 2018-04-02 21:10:33.686 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d23e042
[DEBUG] 2018-04-02 21:10:33.687 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2254127a
[DEBUG] 2018-04-02 21:10:33.687 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2254127a
[DEBUG] 2018-04-02 21:10:33.687 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2254127a
[DEBUG] 2018-04-02 21:10:33.688 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@14bdbc74
[DEBUG] 2018-04-02 21:10:33.688 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@14bdbc74
[DEBUG] 2018-04-02 21:10:33.688 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14bdbc74
[DEBUG] 2018-04-02 21:10:33.689 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@24c1b2d2
[DEBUG] 2018-04-02 21:10:33.689 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@24c1b2d2
[DEBUG] 2018-04-02 21:10:33.689 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@24c1b2d2
[DEBUG] 2018-04-02 21:10:33.690 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7486b455
[DEBUG] 2018-04-02 21:10:33.690 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7486b455
[DEBUG] 2018-04-02 21:10:33.690 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7486b455
[DEBUG] 2018-04-02 21:10:33.692 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@49c90a9c
[DEBUG] 2018-04-02 21:10:33.692 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@49c90a9c
[DEBUG] 2018-04-02 21:10:33.692 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@49c90a9c
[DEBUG] 2018-04-02 21:10:33.693 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3b35a229
[DEBUG] 2018-04-02 21:10:33.693 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3b35a229
[DEBUG] 2018-04-02 21:10:33.694 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7dc3712
[DEBUG] 2018-04-02 21:10:33.694 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7dc3712
[DEBUG] 2018-04-02 21:10:33.695 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5be1d0a4
[DEBUG] 2018-04-02 21:10:33.695 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5be1d0a4
[DEBUG] 2018-04-02 21:10:33.695 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d322cad
[DEBUG] 2018-04-02 21:10:33.696 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@448c8166
[DEBUG] 2018-04-02 21:10:33.697 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@13526e59
[DEBUG] 2018-04-02 21:10:33.697 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@13526e59
[DEBUG] 2018-04-02 21:10:33.699 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@36804139
[DEBUG] 2018-04-02 21:10:33.699 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@36804139
[DEBUG] 2018-04-02 21:10:33.724 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@32115b28
[DEBUG] 2018-04-02 21:10:33.724 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@32115b28
[DEBUG] 2018-04-02 21:10:33.726 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b8729ff
[DEBUG] 2018-04-02 21:10:33.726 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b8729ff
[DEBUG] 2018-04-02 21:10:33.727 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2bdd8394
[DEBUG] 2018-04-02 21:10:33.727 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2bdd8394
[DEBUG] 2018-04-02 21:10:33.728 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2eea88a1
[DEBUG] 2018-04-02 21:10:33.729 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2eea88a1
[DEBUG] 2018-04-02 21:10:33.730 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@16612a51
[DEBUG] 2018-04-02 21:10:33.730 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@16612a51
[DEBUG] 2018-04-02 21:10:33.730 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e0ae11f
[DEBUG] 2018-04-02 21:10:33.731 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e0ae11f
[DEBUG] 2018-04-02 21:10:33.733 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4ef74c30
[DEBUG] 2018-04-02 21:10:33.733 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4ef74c30
[DEBUG] 2018-04-02 21:10:33.735 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@776a6d9b
[DEBUG] 2018-04-02 21:10:33.735 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@776a6d9b
[DEBUG] 2018-04-02 21:10:33.736 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1cf56a1c
[DEBUG] 2018-04-02 21:10:33.737 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cf56a1c
[DEBUG] 2018-04-02 21:10:33.738 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@35b74c5c
[DEBUG] 2018-04-02 21:10:33.738 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35b74c5c
[DEBUG] 2018-04-02 21:10:33.738 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35b74c5c
[DEBUG] 2018-04-02 21:10:33.739 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@81d9a72
[DEBUG] 2018-04-02 21:10:33.740 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@70e38ce1
[DEBUG] 2018-04-02 21:10:33.740 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70e38ce1
[DEBUG] 2018-04-02 21:10:33.740 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70e38ce1
[DEBUG] 2018-04-02 21:10:33.741 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ebea008
[DEBUG] 2018-04-02 21:10:33.742 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@51bf5add
[DEBUG] 2018-04-02 21:10:33.742 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51bf5add
[DEBUG] 2018-04-02 21:10:33.743 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@478db956
[DEBUG] 2018-04-02 21:10:33.743 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@478db956
[DEBUG] 2018-04-02 21:10:33.743 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b410b60
[DEBUG] 2018-04-02 21:10:33.743 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b410b60
[DEBUG] 2018-04-02 21:10:33.749 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@456d6c1e
[DEBUG] 2018-04-02 21:10:33.752 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@456d6c1e
[DEBUG] 2018-04-02 21:10:33.757 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15f47664
[DEBUG] 2018-04-02 21:10:33.757 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15f47664
[DEBUG] 2018-04-02 21:10:33.757 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2f666ebb
[DEBUG] 2018-04-02 21:10:33.758 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@75c56eb9
[DEBUG] 2018-04-02 21:10:33.758 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@75c56eb9
[DEBUG] 2018-04-02 21:10:33.758 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@75c56eb9
[DEBUG] 2018-04-02 21:10:33.759 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5e17553a
[DEBUG] 2018-04-02 21:10:33.759 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5e17553a
[DEBUG] 2018-04-02 21:10:33.759 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5e17553a
[DEBUG] 2018-04-02 21:10:33.760 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@27912e3
[DEBUG] 2018-04-02 21:10:33.760 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@30b6ffe0
[DEBUG] 2018-04-02 21:10:33.761 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@24c22fe
[DEBUG] 2018-04-02 21:10:33.761 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@24c22fe
[DEBUG] 2018-04-02 21:10:33.761 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@24c22fe
[DEBUG] 2018-04-02 21:10:33.761 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@15a04efb
[DEBUG] 2018-04-02 21:10:33.762 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@15a04efb
[DEBUG] 2018-04-02 21:10:33.762 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@15a04efb
[DEBUG] 2018-04-02 21:10:33.762 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3336e6b6
[DEBUG] 2018-04-02 21:10:33.763 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6f3187b0
[DEBUG] 2018-04-02 21:10:33.765 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@407a7f2a
[DEBUG] 2018-04-02 21:10:33.765 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@407a7f2a
[DEBUG] 2018-04-02 21:10:33.766 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3fa247d1
[DEBUG] 2018-04-02 21:10:33.768 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@651aed93
[DEBUG] 2018-04-02 21:10:33.768 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@651aed93
[DEBUG] 2018-04-02 21:10:33.770 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4ef782af
[DEBUG] 2018-04-02 21:10:33.770 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ef782af
[DEBUG] 2018-04-02 21:10:33.771 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@59e2d8e3
[DEBUG] 2018-04-02 21:10:33.771 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d43661b
[DEBUG] 2018-04-02 21:10:33.772 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1c852c0f
[DEBUG] 2018-04-02 21:10:33.774 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3b79fd76
[DEBUG] 2018-04-02 21:10:33.774 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b79fd76
[DEBUG] 2018-04-02 21:10:33.775 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f81aa00
[DEBUG] 2018-04-02 21:10:33.775 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b6776cb
[DEBUG] 2018-04-02 21:10:33.775 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1863d2fe
[DEBUG] 2018-04-02 21:10:33.775 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1787bc24
[DEBUG] 2018-04-02 21:10:33.775 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@544d57e
[DEBUG] 2018-04-02 21:10:33.775 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55c53a33
[DEBUG] 2018-04-02 21:10:33.775 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53b7f657
[DEBUG] 2018-04-02 21:10:33.775 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@797b0699
[INFO ] 2018-04-02 21:10:33.782 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hearthstone
[INFO ] 2018-04-02 21:10:33.783 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-04-02 21:10:33.783 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-04-02 21:10:33.925 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-04-02 21:10:34.192 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.21-0ubuntu0.16.04.1
      major : 5
      minor : 7
[DEBUG] 2018-04-02 21:10:34.196 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-04-02 21:10:34.196 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-04-02 21:10:34.205 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-04-02 21:10:34.259 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-04-02 21:10:34.270 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-04-02 21:10:34.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-04-02 21:10:34.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-04-02 21:10:34.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-04-02 21:10:34.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-04-02 21:10:34.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-04-02 21:10:34.310 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-04-02 21:10:34.310 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-04-02 21:10:34.311 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-04-02 21:10:34.311 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-04-02 21:10:34.312 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-04-02 21:10:34.312 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-04-02 21:10:34.312 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-04-02 21:10:34.312 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-04-02 21:10:34.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-04-02 21:10:34.336 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-04-02 21:10:34.354 [main] AnnotationBinder - Binding entity from annotated class: com.hearthstone.entity.Deck
[DEBUG] 2018-04-02 21:10:34.369 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-04-02 21:10:34.373 [main] EntityBinder - Import with entity name Deck
[DEBUG] 2018-04-02 21:10:34.375 [main] EntityBinder - Bind entity com.hearthstone.entity.Deck on table deck
[DEBUG] 2018-04-02 21:10:34.396 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.398 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-04-02 21:10:34.399 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:id]
[DEBUG] 2018-04-02 21:10:34.400 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-04-02 21:10:34.401 [main] PropertyBinder - Building property id
[DEBUG] 2018-04-02 21:10:34.404 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.404 [main] PropertyBinder - MetadataSourceProcessor property card_set with lazy=false
[DEBUG] 2018-04-02 21:10:34.404 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:card_set]
[DEBUG] 2018-04-02 21:10:34.404 [main] SimpleValueBinder - building SimpleValue for card_set
[DEBUG] 2018-04-02 21:10:34.405 [main] PropertyBinder - Building property card_set
[DEBUG] 2018-04-02 21:10:34.405 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=mana_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.405 [main] PropertyBinder - MetadataSourceProcessor property mana_cost with lazy=false
[DEBUG] 2018-04-02 21:10:34.405 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:mana_cost]
[DEBUG] 2018-04-02 21:10:34.405 [main] SimpleValueBinder - building SimpleValue for mana_cost
[DEBUG] 2018-04-02 21:10:34.405 [main] PropertyBinder - Building property mana_cost
[DEBUG] 2018-04-02 21:10:34.405 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.405 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-04-02 21:10:34.405 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:name]
[DEBUG] 2018-04-02 21:10:34.405 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-04-02 21:10:34.405 [main] PropertyBinder - Building property name
[DEBUG] 2018-04-02 21:10:34.405 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.406 [main] PropertyBinder - MetadataSourceProcessor property rarity with lazy=false
[DEBUG] 2018-04-02 21:10:34.406 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:rarity]
[DEBUG] 2018-04-02 21:10:34.406 [main] SimpleValueBinder - building SimpleValue for rarity
[DEBUG] 2018-04-02 21:10:34.406 [main] PropertyBinder - Building property rarity
[DEBUG] 2018-04-02 21:10:34.407 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-04-02 21:10:34.407 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=stats, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.408 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.414 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.414 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=stats_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.415 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='stats_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-04-02 21:10:34.415 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-04-02 21:10:34.415 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-04-02 21:10:34.416 [main] CollectionBinder - Collection role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-04-02 21:10:34.417 [main] PropertyBinder - Building property stats
[DEBUG] 2018-04-02 21:10:34.418 [main] AnnotationBinder - Binding entity from annotated class: com.hearthstone.entity.Stats
[DEBUG] 2018-04-02 21:10:34.418 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-04-02 21:10:34.418 [main] EntityBinder - Import with entity name Stats
[DEBUG] 2018-04-02 21:10:34.418 [main] EntityBinder - Bind entity com.hearthstone.entity.Stats on table stats
[DEBUG] 2018-04-02 21:10:34.420 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.420 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-04-02 21:10:34.420 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Stats:id]
[DEBUG] 2018-04-02 21:10:34.420 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-04-02 21:10:34.420 [main] PropertyBinder - Building property id
[DEBUG] 2018-04-02 21:10:34.420 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-04-02 21:10:34.420 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=deck, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.421 [main] PropertyBinder - Building property deck
[DEBUG] 2018-04-02 21:10:34.421 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-04-02 21:10:34.421 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2018-04-02 21:10:34.421 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Stats:description]
[DEBUG] 2018-04-02 21:10:34.421 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2018-04-02 21:10:34.421 [main] PropertyBinder - Building property description
[DEBUG] 2018-04-02 21:10:34.422 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-04-02 21:10:34.422 [main] SimpleValueBinder - Starting fillSimpleValue for card_set
[DEBUG] 2018-04-02 21:10:34.422 [main] SimpleValueBinder - Starting fillSimpleValue for mana_cost
[DEBUG] 2018-04-02 21:10:34.422 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-04-02 21:10:34.422 [main] SimpleValueBinder - Starting fillSimpleValue for rarity
[DEBUG] 2018-04-02 21:10:34.422 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-04-02 21:10:34.422 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2018-04-02 21:10:34.426 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [deck]
[DEBUG] 2018-04-02 21:10:34.426 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [stats]
[DEBUG] 2018-04-02 21:10:34.426 [main] CollectionSecondPass - Second pass for collection: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-04-02 21:10:34.426 [main] CollectionBinder - Binding a OneToMany: com.hearthstone.entity.Deck.stats through a foreign key
[DEBUG] 2018-04-02 21:10:34.427 [main] CollectionBinder - Mapping collection: com.hearthstone.entity.Deck.stats -> stats
[DEBUG] 2018-04-02 21:10:34.427 [main] TableBinder - Retrieving property com.hearthstone.entity.Stats.deck
[DEBUG] 2018-04-02 21:10:34.428 [main] CollectionSecondPass - Mapped collection key: deck_id, one-to-many: com.hearthstone.entity.Stats
[DEBUG] 2018-04-02 21:10:34.428 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.hearthstone.entity.Deck
[DEBUG] 2018-04-02 21:10:34.430 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.hearthstone.entity.Deck
[DEBUG] 2018-04-02 21:10:34.456 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-04-02 21:10:34.456 [main] Settings - SessionFactory name : null
[DEBUG] 2018-04-02 21:10:34.456 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-04-02 21:10:34.456 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-04-02 21:10:34.456 [main] Settings - Statistics: disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Named query checking : enabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@70dd7e15
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-04-02 21:10:34.457 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-04-02 21:10:34.458 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-04-02 21:10:34.458 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-04-02 21:10:34.458 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-04-02 21:10:34.458 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-04-02 21:10:34.458 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-04-02 21:10:34.458 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-04-02 21:10:34.458 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-04-02 21:10:34.458 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-04-02 21:10:34.496 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-04-02 21:10:34.497 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/deploy.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/javaws.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfxswt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-oracle/jre/lib/plugin.jar:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/home/student/IdeaProjects/hearthstoneDeckTracker1/target/test-classes:/home/student/IdeaProjects/hearthstoneDeckTracker1/target/classes:/home/student/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.9.0/jackson-jaxrs-1.9.0.jar:/home/student/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.0/jackson-core-asl-1.9.0.jar:/home/student/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.0/jackson-mapper-asl-1.9.0.jar:/home/student/.m2/repository/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.23.2/jersey-container-servlet-2.23.2.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.23.2/jersey-container-servlet-core-2.23.2.jar:/home/student/.m2/repository/org/glassfish/hk2/external/javax.inject/2.5.0-b05/javax.inject-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.23.2/jersey-common-2.23.2.jar:/home/student/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/home/student/.m2/repository/org/glassfish/jersey/bundles/repackaged/jersey-guava/2.23.2/jersey-guava-2.23.2.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.5.0-b05/hk2-api-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.5.0-b05/hk2-utils-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.5.0-b05/aopalliance-repackaged-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.5.0-b05/hk2-locator-2.5.0-b05.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.23.2/jersey-server-2.23.2.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.23.2/jersey-client-2.23.2.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.23.2/jersey-media-jaxb-2.23.2.jar:/home/student/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/student/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/student/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/student/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/home/student/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/home/student/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.1.0/junit-jupiter-api-5.1.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.1.0/junit-platform-commons-1.1.0.jar:/home/student/intellij/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.hearthstone.persistence.DecklistDaoTest,getBy5thCardSuccess, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=/home/student, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-oracle/jre, file.separator=/, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_144-b01, user.name=student, path.separator=:, hibernate.connection.username=root, os.version=4.4.0-112-generic, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hearthstone, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_144, user.dir=/home/student/IdeaProjects/hearthstoneDeckTracker1, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@43ed0ff3, java.library.path=/home/student/intellij/bin::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.144-b01, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hearthstone, java.class.version=52.0}
[DEBUG] 2018-04-02 21:10:34.509 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-04-02 21:10:34.509 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-04-02 21:10:34.510 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-04-02 21:10:34.540 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Stats] is safe
[DEBUG] 2018-04-02 21:10:34.541 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Stats
[DEBUG] 2018-04-02 21:10:34.552 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Stats] is safe
[DEBUG] 2018-04-02 21:10:34.552 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Stats
[DEBUG] 2018-04-02 21:10:34.588 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Deck] is safe
[DEBUG] 2018-04-02 21:10:34.588 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Deck
[DEBUG] 2018-04-02 21:10:34.590 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Deck] is safe
[DEBUG] 2018-04-02 21:10:34.590 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Deck
[DEBUG] 2018-04-02 21:10:34.600 [main] AbstractCollectionPersister - Static SQL for collection: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-04-02 21:10:34.600 [main] AbstractCollectionPersister -  Row insert: update stats set deck_id=? where id=?
[DEBUG] 2018-04-02 21:10:34.600 [main] AbstractCollectionPersister -  Row update: update stats set  where id=?
[DEBUG] 2018-04-02 21:10:34.600 [main] AbstractCollectionPersister -  Row delete: update stats set deck_id=null where deck_id=? and id=?
[DEBUG] 2018-04-02 21:10:34.600 [main] AbstractCollectionPersister -  One-shot delete: update stats set deck_id=null where deck_id=?
[DEBUG] 2018-04-02 21:10:34.603 [main] AbstractEntityPersister - Static SQL for entity: com.hearthstone.entity.Stats
[DEBUG] 2018-04-02 21:10:34.603 [main] AbstractEntityPersister -  Version select: select id from stats where id =?
[DEBUG] 2018-04-02 21:10:34.603 [main] AbstractEntityPersister -  Snapshot select: select stats_.id, stats_.deck_id as deck_id3_1_, stats_.description as descript2_1_ from stats stats_ where stats_.id=?
[DEBUG] 2018-04-02 21:10:34.603 [main] AbstractEntityPersister -  Insert 0: insert into stats (deck_id, description, id) values (?, ?, ?)
[DEBUG] 2018-04-02 21:10:34.603 [main] AbstractEntityPersister -  Update 0: update stats set deck_id=?, description=? where id=?
[DEBUG] 2018-04-02 21:10:34.604 [main] AbstractEntityPersister -  Delete 0: delete from stats where id=?
[DEBUG] 2018-04-02 21:10:34.604 [main] AbstractEntityPersister -  Identity insert: insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-04-02 21:10:34.618 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b530eb9]
[DEBUG] 2018-04-02 21:10:34.619 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.622 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6bbeb0]
[DEBUG] 2018-04-02 21:10:34.623 [main] MetamodelGraphWalker - Visiting attribute path : deck.card_set
[DEBUG] 2018-04-02 21:10:34.623 [main] MetamodelGraphWalker - Visiting attribute path : deck.mana_cost
[DEBUG] 2018-04-02 21:10:34.624 [main] MetamodelGraphWalker - Visiting attribute path : deck.name
[DEBUG] 2018-04-02 21:10:34.624 [main] MetamodelGraphWalker - Visiting attribute path : deck.rarity
[DEBUG] 2018-04-02 21:10:34.624 [main] MetamodelGraphWalker - Visiting attribute path : deck.stats
[DEBUG] 2018-04-02 21:10:34.624 [main] MetamodelGraphWalker - Property path deemed to be circular : deck.stats
[DEBUG] 2018-04-02 21:10:34.624 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.624 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.633 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.636 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(deck)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Deck)
                - SQL table alias mapping - deck1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2018-04-02 21:10:34.638 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [NONE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-04-02 21:10:34.638 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2516fc68]
[DEBUG] 2018-04-02 21:10:34.638 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.638 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bfdb014]
[DEBUG] 2018-04-02 21:10:34.638 [main] MetamodelGraphWalker - Visiting attribute path : deck.card_set
[DEBUG] 2018-04-02 21:10:34.638 [main] MetamodelGraphWalker - Visiting attribute path : deck.mana_cost
[DEBUG] 2018-04-02 21:10:34.638 [main] MetamodelGraphWalker - Visiting attribute path : deck.name
[DEBUG] 2018-04-02 21:10:34.638 [main] MetamodelGraphWalker - Visiting attribute path : deck.rarity
[DEBUG] 2018-04-02 21:10:34.638 [main] MetamodelGraphWalker - Visiting attribute path : deck.stats
[DEBUG] 2018-04-02 21:10:34.638 [main] MetamodelGraphWalker - Property path deemed to be circular : deck.stats
[DEBUG] 2018-04-02 21:10:34.638 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.639 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.639 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.639 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(deck)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Deck)
                - SQL table alias mapping - deck1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2018-04-02 21:10:34.639 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [READ]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-04-02 21:10:34.639 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@606fc505]
[DEBUG] 2018-04-02 21:10:34.639 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.639 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d140a7]
[DEBUG] 2018-04-02 21:10:34.639 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.639 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.639 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.640 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-04-02 21:10:34.640 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.640 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@347bdeef]
[DEBUG] 2018-04-02 21:10:34.640 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.640 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f34a967]
[DEBUG] 2018-04-02 21:10:34.640 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.640 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.640 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.640 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-04-02 21:10:34.640 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE_NOWAIT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.640 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77e80a5e]
[DEBUG] 2018-04-02 21:10:34.640 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.640 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@240139e1]
[DEBUG] 2018-04-02 21:10:34.640 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.640 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.641 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.641 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-04-02 21:10:34.641 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE_SKIPLOCKED]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.641 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea4d397]
[DEBUG] 2018-04-02 21:10:34.641 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.641 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@253c1256]
[DEBUG] 2018-04-02 21:10:34.641 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.641 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.641 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.641 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-04-02 21:10:34.641 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [FORCE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.641 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8dfe921]
[DEBUG] 2018-04-02 21:10:34.642 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.642 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55f45b92]
[DEBUG] 2018-04-02 21:10:34.642 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.642 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.642 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.642 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-04-02 21:10:34.642 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_READ]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? lock in share mode
[DEBUG] 2018-04-02 21:10:34.642 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@109f5dd8]
[DEBUG] 2018-04-02 21:10:34.642 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.642 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a325eb9]
[DEBUG] 2018-04-02 21:10:34.642 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.642 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.642 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.642 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-04-02 21:10:34.643 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_WRITE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.643 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dedb4a6]
[DEBUG] 2018-04-02 21:10:34.643 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.643 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@415e0bcb]
[DEBUG] 2018-04-02 21:10:34.643 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.643 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.643 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.643 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-04-02 21:10:34.643 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_FORCE_INCREMENT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.643 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@194152cf]
[DEBUG] 2018-04-02 21:10:34.643 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.643 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c30b71f]
[DEBUG] 2018-04-02 21:10:34.643 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.643 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.643 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.644 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-04-02 21:10:34.644 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [OPTIMISTIC]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-04-02 21:10:34.644 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d81e101]
[DEBUG] 2018-04-02 21:10:34.644 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.644 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bf71cec]
[DEBUG] 2018-04-02 21:10:34.644 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.644 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.644 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.644 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-04-02 21:10:34.644 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [OPTIMISTIC_FORCE_INCREMENT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-04-02 21:10:34.655 [main] Loader - Static select for action ACTION_MERGE on entity com.hearthstone.entity.Stats: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-04-02 21:10:34.655 [main] Loader - Static select for action ACTION_REFRESH on entity com.hearthstone.entity.Stats: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-04-02 21:10:34.655 [main] AbstractEntityPersister - Static SQL for entity: com.hearthstone.entity.Deck
[DEBUG] 2018-04-02 21:10:34.655 [main] AbstractEntityPersister -  Version select: select id from deck where id =?
[DEBUG] 2018-04-02 21:10:34.655 [main] AbstractEntityPersister -  Snapshot select: select deck_.id, deck_.card_set as card_set2_0_, deck_.mana_cost as mana_cos3_0_, deck_.name as name4_0_, deck_.rarity as rarity5_0_ from deck deck_ where deck_.id=?
[DEBUG] 2018-04-02 21:10:34.655 [main] AbstractEntityPersister -  Insert 0: insert into deck (card_set, mana_cost, name, rarity, id) values (?, ?, ?, ?, ?)
[DEBUG] 2018-04-02 21:10:34.655 [main] AbstractEntityPersister -  Update 0: update deck set card_set=?, mana_cost=?, name=?, rarity=? where id=?
[DEBUG] 2018-04-02 21:10:34.655 [main] AbstractEntityPersister -  Delete 0: delete from deck where id=?
[DEBUG] 2018-04-02 21:10:34.655 [main] AbstractEntityPersister -  Identity insert: insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-04-02 21:10:34.656 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e9f2e2]
[DEBUG] 2018-04-02 21:10:34.656 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.656 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.656 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.656 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.656 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.656 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c4bc9fc]
[DEBUG] 2018-04-02 21:10:34.657 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@238ad8c]
[DEBUG] 2018-04-02 21:10:34.658 [main] MetamodelGraphWalker - Visiting attribute path : stats.deck
[DEBUG] 2018-04-02 21:10:34.658 [main] MetamodelGraphWalker - Property path deemed to be circular : stats.deck
[DEBUG] 2018-04-02 21:10:34.659 [main] MetamodelGraphWalker - Visiting attribute path : stats.description
[DEBUG] 2018-04-02 21:10:34.659 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.659 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.660 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(stats)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.hearthstone.entity.Deck.stats)
                - SQL table alias mapping - stats1_
                - alias suffix - 1_
                - suffixed key columns - {deck_id3_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.hearthstone.entity.Stats)
                      - SQL table alias mapping - stats1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2018-04-02 21:10:34.661 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [NONE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-04-02 21:10:34.661 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@208e9ef6]
[DEBUG] 2018-04-02 21:10:34.661 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.661 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.661 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.661 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.661 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.661 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@261d8190]
[DEBUG] 2018-04-02 21:10:34.661 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34448e6c]
[DEBUG] 2018-04-02 21:10:34.661 [main] MetamodelGraphWalker - Visiting attribute path : stats.deck
[DEBUG] 2018-04-02 21:10:34.661 [main] MetamodelGraphWalker - Property path deemed to be circular : stats.deck
[DEBUG] 2018-04-02 21:10:34.661 [main] MetamodelGraphWalker - Visiting attribute path : stats.description
[DEBUG] 2018-04-02 21:10:34.661 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.661 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.662 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(stats)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.hearthstone.entity.Deck.stats)
                - SQL table alias mapping - stats1_
                - alias suffix - 1_
                - suffixed key columns - {deck_id3_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.hearthstone.entity.Stats)
                      - SQL table alias mapping - stats1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2018-04-02 21:10:34.662 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [READ]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-04-02 21:10:34.662 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435ce306]
[DEBUG] 2018-04-02 21:10:34.662 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.662 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.662 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.662 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.662 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.662 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7dc51783]
[DEBUG] 2018-04-02 21:10:34.662 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b61d0c6]
[DEBUG] 2018-04-02 21:10:34.662 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.662 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.662 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-04-02 21:10:34.662 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.662 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f815e7f]
[DEBUG] 2018-04-02 21:10:34.663 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.663 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.663 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.663 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.663 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.663 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@304b9f1a]
[DEBUG] 2018-04-02 21:10:34.663 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75699e35]
[DEBUG] 2018-04-02 21:10:34.663 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.663 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.663 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-04-02 21:10:34.663 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE_NOWAIT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.663 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107e5441]
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.664 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@263558c9]
[DEBUG] 2018-04-02 21:10:34.664 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f14f20c]
[DEBUG] 2018-04-02 21:10:34.664 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.664 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.664 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-04-02 21:10:34.664 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE_SKIPLOCKED]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.664 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7daa61f3]
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.664 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.664 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e4ea0bd]
[DEBUG] 2018-04-02 21:10:34.664 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f2bbea]
[DEBUG] 2018-04-02 21:10:34.665 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.665 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.665 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-04-02 21:10:34.665 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [FORCE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.665 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f9ed3e]
[DEBUG] 2018-04-02 21:10:34.665 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.665 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.665 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.665 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.665 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.665 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b0964b2]
[DEBUG] 2018-04-02 21:10:34.665 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48e7b3d2]
[DEBUG] 2018-04-02 21:10:34.665 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.665 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.665 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-04-02 21:10:34.666 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_READ]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? lock in share mode
[DEBUG] 2018-04-02 21:10:34.666 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f4037ed]
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.666 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64040287]
[DEBUG] 2018-04-02 21:10:34.666 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@110844f6]
[DEBUG] 2018-04-02 21:10:34.666 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.666 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.666 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-04-02 21:10:34.666 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_WRITE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.666 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f89f665]
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.666 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.667 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4925f4f5]
[DEBUG] 2018-04-02 21:10:34.667 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad926d3]
[DEBUG] 2018-04-02 21:10:34.667 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.667 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.667 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-04-02 21:10:34.667 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_FORCE_INCREMENT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-04-02 21:10:34.667 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a43d133]
[DEBUG] 2018-04-02 21:10:34.667 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.667 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.667 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.667 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.667 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.667 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f2afe62]
[DEBUG] 2018-04-02 21:10:34.667 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c96a4ea]
[DEBUG] 2018-04-02 21:10:34.668 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.668 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.668 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-04-02 21:10:34.668 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [OPTIMISTIC]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=?
[DEBUG] 2018-04-02 21:10:34.668 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28782602]
[DEBUG] 2018-04-02 21:10:34.668 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-04-02 21:10:34.668 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-04-02 21:10:34.668 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-04-02 21:10:34.668 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-04-02 21:10:34.668 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-04-02 21:10:34.668 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68105edc]
[DEBUG] 2018-04-02 21:10:34.668 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@511816c0]
[DEBUG] 2018-04-02 21:10:34.668 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.668 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.669 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-04-02 21:10:34.669 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [OPTIMISTIC_FORCE_INCREMENT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=?
[DEBUG] 2018-04-02 21:10:34.669 [main] Loader - Static select for action ACTION_MERGE on entity com.hearthstone.entity.Deck: select deck0_.id as id1_0_1_, deck0_.card_set as card_set2_0_1_, deck0_.mana_cost as mana_cos3_0_1_, deck0_.name as name4_0_1_, deck0_.rarity as rarity5_0_1_, stats1_.deck_id as deck_id3_1_3_, stats1_.id as id1_1_3_, stats1_.id as id1_1_0_, stats1_.deck_id as deck_id3_1_0_, stats1_.description as descript2_1_0_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-04-02 21:10:34.670 [main] Loader - Static select for action ACTION_REFRESH on entity com.hearthstone.entity.Deck: select deck0_.id as id1_0_1_, deck0_.card_set as card_set2_0_1_, deck0_.mana_cost as mana_cos3_0_1_, deck0_.name as name4_0_1_, deck0_.rarity as rarity5_0_1_, stats1_.deck_id as deck_id3_1_3_, stats1_.id as id1_1_3_, stats1_.id as id1_1_0_, stats1_.deck_id as deck_id3_1_0_, stats1_.description as descript2_1_0_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-04-02 21:10:34.673 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c8a68c1]
[DEBUG] 2018-04-02 21:10:34.674 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56193c7d]
[DEBUG] 2018-04-02 21:10:34.674 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-04-02 21:10:34.674 [main] MetamodelGraphWalker - Property path deemed to be circular : deck
[DEBUG] 2018-04-02 21:10:34.674 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-04-02 21:10:34.674 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-04-02 21:10:34.675 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-04-02 21:10:34.676 [main] LoadPlanTreePrinter - LoadPlan(collection=com.hearthstone.entity.Deck.stats)
    - Returns
       - CollectionReturnImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:0>, path=[com.hearthstone.entity.Deck.stats])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:1>, path=[com.hearthstone.entity.Deck.stats].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.hearthstone.entity.Deck.stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {deck_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Stats)
                - SQL table alias mapping - stats0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2018-04-02 21:10:34.676 [main] CollectionLoader - Static select for collection com.hearthstone.entity.Deck.stats: select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-04-02 21:10:34.694 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-04-02 21:10:34.694 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-04-02 21:10:34.695 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-04-02 21:10:34.698 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-04-02 21:10:34.698 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-04-02 21:10:34.699 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-04-02 21:10:34.700 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5e76a2bb
[DEBUG] 2018-04-02 21:10:34.701 [main] SessionFactoryRegistry - Registering SessionFactory: cc7cea07-3cb1-4477-b586-497fc541772d (<unnamed>)
[DEBUG] 2018-04-02 21:10:34.701 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-04-02 21:10:34.758 [main] StatisticsInitiator - Statistics initialized [enabled=false]
