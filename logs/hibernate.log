[DEBUG] 2018-02-27 19:05:02.050 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-02-27 19:05:02.051 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-02-27 19:05:02.054 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-02-27 19:05:02.100 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-02-27 19:05:02.101 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-02-27 19:05:02.131 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-02-27 19:05:02.131 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-02-27 19:05:02.134 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-02-27 19:05:02.960 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-02-27 19:05:02.974 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-02-27 19:05:02.979 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-02-27 19:05:02.993 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@352ff4da
[DEBUG] 2018-02-27 19:05:02.993 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@352ff4da
[DEBUG] 2018-02-27 19:05:02.994 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@352ff4da
[DEBUG] 2018-02-27 19:05:02.994 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@295cf707
[DEBUG] 2018-02-27 19:05:02.995 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@42b3b079
[DEBUG] 2018-02-27 19:05:02.995 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@bb9e6dc
[DEBUG] 2018-02-27 19:05:02.996 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6736fa8d
[DEBUG] 2018-02-27 19:05:02.996 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6736fa8d
[DEBUG] 2018-02-27 19:05:02.996 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6736fa8d
[DEBUG] 2018-02-27 19:05:02.997 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@14a50707
[DEBUG] 2018-02-27 19:05:02.997 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@14a50707
[DEBUG] 2018-02-27 19:05:02.997 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14a50707
[DEBUG] 2018-02-27 19:05:02.998 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4ef782af
[DEBUG] 2018-02-27 19:05:02.998 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4ef782af
[DEBUG] 2018-02-27 19:05:02.998 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4ef782af
[DEBUG] 2018-02-27 19:05:02.999 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7f8a9499
[DEBUG] 2018-02-27 19:05:02.999 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7f8a9499
[DEBUG] 2018-02-27 19:05:02.999 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f8a9499
[DEBUG] 2018-02-27 19:05:03.000 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@62833051
[DEBUG] 2018-02-27 19:05:03.000 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@62833051
[DEBUG] 2018-02-27 19:05:03.000 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@62833051
[DEBUG] 2018-02-27 19:05:03.001 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b7fdc8
[DEBUG] 2018-02-27 19:05:03.001 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7b7fdc8
[DEBUG] 2018-02-27 19:05:03.001 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b7fdc8
[DEBUG] 2018-02-27 19:05:03.002 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3b79fd76
[DEBUG] 2018-02-27 19:05:03.002 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3b79fd76
[DEBUG] 2018-02-27 19:05:03.002 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3b79fd76
[DEBUG] 2018-02-27 19:05:03.003 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@53b7f657
[DEBUG] 2018-02-27 19:05:03.003 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@53b7f657
[DEBUG] 2018-02-27 19:05:03.003 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b58b9e9
[DEBUG] 2018-02-27 19:05:03.003 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b58b9e9
[DEBUG] 2018-02-27 19:05:03.004 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d9caaeb
[DEBUG] 2018-02-27 19:05:03.004 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d9caaeb
[DEBUG] 2018-02-27 19:05:03.004 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@27508c5d
[DEBUG] 2018-02-27 19:05:03.005 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@704deff2
[DEBUG] 2018-02-27 19:05:03.006 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6986852
[DEBUG] 2018-02-27 19:05:03.006 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6986852
[DEBUG] 2018-02-27 19:05:03.006 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6c61a903
[DEBUG] 2018-02-27 19:05:03.007 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6c61a903
[DEBUG] 2018-02-27 19:05:03.017 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5b3f61ff
[DEBUG] 2018-02-27 19:05:03.017 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5b3f61ff
[DEBUG] 2018-02-27 19:05:03.018 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b8a29df
[DEBUG] 2018-02-27 19:05:03.018 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b8a29df
[DEBUG] 2018-02-27 19:05:03.019 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@11bb571c
[DEBUG] 2018-02-27 19:05:03.020 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@11bb571c
[DEBUG] 2018-02-27 19:05:03.021 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@57576994
[DEBUG] 2018-02-27 19:05:03.021 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@57576994
[DEBUG] 2018-02-27 19:05:03.022 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@490caf5f
[DEBUG] 2018-02-27 19:05:03.022 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@490caf5f
[DEBUG] 2018-02-27 19:05:03.022 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4032d386
[DEBUG] 2018-02-27 19:05:03.023 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4032d386
[DEBUG] 2018-02-27 19:05:03.025 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d026701
[DEBUG] 2018-02-27 19:05:03.025 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d026701
[DEBUG] 2018-02-27 19:05:03.026 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2812b107
[DEBUG] 2018-02-27 19:05:03.026 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2812b107
[DEBUG] 2018-02-27 19:05:03.027 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@198d6542
[DEBUG] 2018-02-27 19:05:03.027 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@198d6542
[DEBUG] 2018-02-27 19:05:03.027 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7674b62c
[DEBUG] 2018-02-27 19:05:03.028 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7674b62c
[DEBUG] 2018-02-27 19:05:03.028 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7674b62c
[DEBUG] 2018-02-27 19:05:03.028 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45a4b042
[DEBUG] 2018-02-27 19:05:03.029 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@f99f5e0
[DEBUG] 2018-02-27 19:05:03.029 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@f99f5e0
[DEBUG] 2018-02-27 19:05:03.029 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@f99f5e0
[DEBUG] 2018-02-27 19:05:03.030 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e6f3f28
[DEBUG] 2018-02-27 19:05:03.030 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5717c37
[DEBUG] 2018-02-27 19:05:03.030 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5717c37
[DEBUG] 2018-02-27 19:05:03.031 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3c01cfa1
[DEBUG] 2018-02-27 19:05:03.031 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c01cfa1
[DEBUG] 2018-02-27 19:05:03.031 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b7a8434
[DEBUG] 2018-02-27 19:05:03.032 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b7a8434
[DEBUG] 2018-02-27 19:05:03.032 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6676f6a0
[DEBUG] 2018-02-27 19:05:03.032 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6676f6a0
[DEBUG] 2018-02-27 19:05:03.033 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4416d64f
[DEBUG] 2018-02-27 19:05:03.033 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4416d64f
[DEBUG] 2018-02-27 19:05:03.033 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@732d0d24
[DEBUG] 2018-02-27 19:05:03.034 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@18e36d14
[DEBUG] 2018-02-27 19:05:03.034 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@18e36d14
[DEBUG] 2018-02-27 19:05:03.034 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@18e36d14
[DEBUG] 2018-02-27 19:05:03.035 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75d2da2d
[DEBUG] 2018-02-27 19:05:03.035 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75d2da2d
[DEBUG] 2018-02-27 19:05:03.035 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75d2da2d
[DEBUG] 2018-02-27 19:05:03.036 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@63eef88a
[DEBUG] 2018-02-27 19:05:03.036 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5a9f4771
[DEBUG] 2018-02-27 19:05:03.037 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@258d79be
[DEBUG] 2018-02-27 19:05:03.037 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@258d79be
[DEBUG] 2018-02-27 19:05:03.037 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@258d79be
[DEBUG] 2018-02-27 19:05:03.037 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@409c54f
[DEBUG] 2018-02-27 19:05:03.037 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@409c54f
[DEBUG] 2018-02-27 19:05:03.037 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@409c54f
[DEBUG] 2018-02-27 19:05:03.038 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@48793bef
[DEBUG] 2018-02-27 19:05:03.038 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@44c73c26
[DEBUG] 2018-02-27 19:05:03.041 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@59e32960
[DEBUG] 2018-02-27 19:05:03.041 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59e32960
[DEBUG] 2018-02-27 19:05:03.041 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@609db546
[DEBUG] 2018-02-27 19:05:03.043 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@43b9fd5
[DEBUG] 2018-02-27 19:05:03.043 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@43b9fd5
[DEBUG] 2018-02-27 19:05:03.045 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@44d52de2
[DEBUG] 2018-02-27 19:05:03.045 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@44d52de2
[DEBUG] 2018-02-27 19:05:03.046 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1e44b638
[DEBUG] 2018-02-27 19:05:03.046 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@31add175
[DEBUG] 2018-02-27 19:05:03.047 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@345f69f3
[DEBUG] 2018-02-27 19:05:03.048 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6bc407fd
[DEBUG] 2018-02-27 19:05:03.049 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bc407fd
[DEBUG] 2018-02-27 19:05:03.049 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ddcc487
[DEBUG] 2018-02-27 19:05:03.049 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16eccb2e
[DEBUG] 2018-02-27 19:05:03.049 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ef5c734
[DEBUG] 2018-02-27 19:05:03.049 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@d771cc9
[DEBUG] 2018-02-27 19:05:03.049 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@36b4091c
[DEBUG] 2018-02-27 19:05:03.049 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4671115f
[DEBUG] 2018-02-27 19:05:03.049 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36cda2c2
[DEBUG] 2018-02-27 19:05:03.049 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3697186
[INFO ] 2018-02-27 19:05:03.055 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hearthstone
[INFO ] 2018-02-27 19:05:03.055 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-02-27 19:05:03.056 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-02-27 19:05:03.125 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-02-27 19:05:03.164 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.21-0ubuntu0.16.04.1
      major : 5
      minor : 7
[DEBUG] 2018-02-27 19:05:03.164 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-02-27 19:05:03.164 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-02-27 19:05:03.173 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-02-27 19:05:03.197 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-02-27 19:05:03.199 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-02-27 19:05:03.226 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-02-27 19:05:03.226 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-02-27 19:05:03.226 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-02-27 19:05:03.226 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-02-27 19:05:03.227 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-02-27 19:05:03.227 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-02-27 19:05:03.228 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-02-27 19:05:03.228 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-02-27 19:05:03.229 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-02-27 19:05:03.229 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-02-27 19:05:03.229 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-02-27 19:05:03.230 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-02-27 19:05:03.230 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-02-27 19:05:03.230 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-02-27 19:05:03.251 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-02-27 19:05:03.265 [main] AnnotationBinder - Binding entity from annotated class: com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:05:03.280 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-02-27 19:05:03.284 [main] EntityBinder - Import with entity name Deck
[DEBUG] 2018-02-27 19:05:03.286 [main] EntityBinder - Bind entity com.hearthstone.entity.Deck on table deck
[DEBUG] 2018-02-27 19:05:03.380 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.382 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-02-27 19:05:03.383 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:id]
[DEBUG] 2018-02-27 19:05:03.384 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-02-27 19:05:03.385 [main] PropertyBinder - Building property id
[DEBUG] 2018-02-27 19:05:03.388 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.388 [main] PropertyBinder - MetadataSourceProcessor property card_set with lazy=false
[DEBUG] 2018-02-27 19:05:03.388 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:card_set]
[DEBUG] 2018-02-27 19:05:03.389 [main] SimpleValueBinder - building SimpleValue for card_set
[DEBUG] 2018-02-27 19:05:03.389 [main] PropertyBinder - Building property card_set
[DEBUG] 2018-02-27 19:05:03.389 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=mana_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.389 [main] PropertyBinder - MetadataSourceProcessor property mana_cost with lazy=false
[DEBUG] 2018-02-27 19:05:03.389 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:mana_cost]
[DEBUG] 2018-02-27 19:05:03.389 [main] SimpleValueBinder - building SimpleValue for mana_cost
[DEBUG] 2018-02-27 19:05:03.389 [main] PropertyBinder - Building property mana_cost
[DEBUG] 2018-02-27 19:05:03.389 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.389 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-02-27 19:05:03.389 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:name]
[DEBUG] 2018-02-27 19:05:03.389 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-02-27 19:05:03.389 [main] PropertyBinder - Building property name
[DEBUG] 2018-02-27 19:05:03.390 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.390 [main] PropertyBinder - MetadataSourceProcessor property rarity with lazy=false
[DEBUG] 2018-02-27 19:05:03.390 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:rarity]
[DEBUG] 2018-02-27 19:05:03.390 [main] SimpleValueBinder - building SimpleValue for rarity
[DEBUG] 2018-02-27 19:05:03.390 [main] PropertyBinder - Building property rarity
[DEBUG] 2018-02-27 19:05:03.391 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-02-27 19:05:03.391 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=stats, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.392 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.398 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.399 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=stats_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.399 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='stats_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-02-27 19:05:03.399 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-02-27 19:05:03.400 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-02-27 19:05:03.400 [main] CollectionBinder - Collection role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:03.401 [main] PropertyBinder - Building property stats
[DEBUG] 2018-02-27 19:05:03.402 [main] AnnotationBinder - Binding entity from annotated class: com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:05:03.402 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-02-27 19:05:03.402 [main] EntityBinder - Import with entity name Stats
[DEBUG] 2018-02-27 19:05:03.402 [main] EntityBinder - Bind entity com.hearthstone.entity.Stats on table stats
[DEBUG] 2018-02-27 19:05:03.404 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.404 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-02-27 19:05:03.404 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Stats:id]
[DEBUG] 2018-02-27 19:05:03.404 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-02-27 19:05:03.404 [main] PropertyBinder - Building property id
[DEBUG] 2018-02-27 19:05:03.405 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-02-27 19:05:03.405 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=deck, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.406 [main] PropertyBinder - Building property deck
[DEBUG] 2018-02-27 19:05:03.406 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:05:03.406 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2018-02-27 19:05:03.406 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Stats:description]
[DEBUG] 2018-02-27 19:05:03.406 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2018-02-27 19:05:03.406 [main] PropertyBinder - Building property description
[DEBUG] 2018-02-27 19:05:03.407 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-02-27 19:05:03.407 [main] SimpleValueBinder - Starting fillSimpleValue for card_set
[DEBUG] 2018-02-27 19:05:03.407 [main] SimpleValueBinder - Starting fillSimpleValue for mana_cost
[DEBUG] 2018-02-27 19:05:03.407 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-02-27 19:05:03.407 [main] SimpleValueBinder - Starting fillSimpleValue for rarity
[DEBUG] 2018-02-27 19:05:03.407 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-02-27 19:05:03.407 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2018-02-27 19:05:03.411 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [deck]
[DEBUG] 2018-02-27 19:05:03.411 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [stats]
[DEBUG] 2018-02-27 19:05:03.411 [main] CollectionSecondPass - Second pass for collection: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:03.411 [main] CollectionBinder - Binding a OneToMany: com.hearthstone.entity.Deck.stats through a foreign key
[DEBUG] 2018-02-27 19:05:03.412 [main] CollectionBinder - Mapping collection: com.hearthstone.entity.Deck.stats -> stats
[DEBUG] 2018-02-27 19:05:03.412 [main] TableBinder - Retrieving property com.hearthstone.entity.Stats.deck
[DEBUG] 2018-02-27 19:05:03.412 [main] CollectionSecondPass - Mapped collection key: deck_id, one-to-many: com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:05:03.413 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:05:03.415 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:05:03.515 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - SessionFactory name : null
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Statistics: disabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Named query checking : enabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-02-27 19:05:03.516 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@54709809
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-02-27 19:05:03.517 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-02-27 19:05:04.609 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-02-27 19:05:04.610 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/deploy.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/javaws.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfxswt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-oracle/jre/lib/plugin.jar:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/home/student/IdeaProjects/hearthstoneDeckTracker1/target/test-classes:/home/student/IdeaProjects/hearthstoneDeckTracker1/target/classes:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/student/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/student/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/home/student/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/home/student/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.1.0/junit-jupiter-api-5.1.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.1.0/junit-platform-commons-1.1.0.jar:/home/student/intellij/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket37548, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=/home/student, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-oracle/jre, file.separator=/, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_144-b01, user.name=student, path.separator=:, hibernate.connection.username=root, os.version=4.4.0-112-generic, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hearthstone, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_144, user.dir=/home/student/IdeaProjects/hearthstoneDeckTracker1, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@29ad44e3, java.library.path=/home/student/intellij/bin::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.144-b01, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hearthstone, java.class.version=52.0}
[DEBUG] 2018-02-27 19:05:04.623 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-02-27 19:05:04.623 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-02-27 19:05:04.624 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-02-27 19:05:04.657 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Stats] is safe
[DEBUG] 2018-02-27 19:05:04.657 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:05:04.669 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Stats] is safe
[DEBUG] 2018-02-27 19:05:04.669 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:05:04.709 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Deck] is safe
[DEBUG] 2018-02-27 19:05:04.709 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:05:04.710 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Deck] is safe
[DEBUG] 2018-02-27 19:05:04.710 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:05:04.721 [main] AbstractCollectionPersister - Static SQL for collection: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:04.721 [main] AbstractCollectionPersister -  Row insert: update stats set deck_id=? where id=?
[DEBUG] 2018-02-27 19:05:04.722 [main] AbstractCollectionPersister -  Row update: update stats set  where id=?
[DEBUG] 2018-02-27 19:05:04.722 [main] AbstractCollectionPersister -  Row delete: update stats set deck_id=null where deck_id=? and id=?
[DEBUG] 2018-02-27 19:05:04.722 [main] AbstractCollectionPersister -  One-shot delete: update stats set deck_id=null where deck_id=?
[DEBUG] 2018-02-27 19:05:04.725 [main] AbstractEntityPersister - Static SQL for entity: com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:05:04.725 [main] AbstractEntityPersister -  Version select: select id from stats where id =?
[DEBUG] 2018-02-27 19:05:04.725 [main] AbstractEntityPersister -  Snapshot select: select stats_.id, stats_.deck_id as deck_id3_1_, stats_.description as descript2_1_ from stats stats_ where stats_.id=?
[DEBUG] 2018-02-27 19:05:04.725 [main] AbstractEntityPersister -  Insert 0: insert into stats (deck_id, description, id) values (?, ?, ?)
[DEBUG] 2018-02-27 19:05:04.725 [main] AbstractEntityPersister -  Update 0: update stats set deck_id=?, description=? where id=?
[DEBUG] 2018-02-27 19:05:04.725 [main] AbstractEntityPersister -  Delete 0: delete from stats where id=?
[DEBUG] 2018-02-27 19:05:04.725 [main] AbstractEntityPersister -  Identity insert: insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-02-27 19:05:04.739 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@110844f6]
[DEBUG] 2018-02-27 19:05:04.740 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.743 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36453307]
[DEBUG] 2018-02-27 19:05:04.744 [main] MetamodelGraphWalker - Visiting attribute path : deck.card_set
[DEBUG] 2018-02-27 19:05:04.745 [main] MetamodelGraphWalker - Visiting attribute path : deck.mana_cost
[DEBUG] 2018-02-27 19:05:04.745 [main] MetamodelGraphWalker - Visiting attribute path : deck.name
[DEBUG] 2018-02-27 19:05:04.745 [main] MetamodelGraphWalker - Visiting attribute path : deck.rarity
[DEBUG] 2018-02-27 19:05:04.745 [main] MetamodelGraphWalker - Visiting attribute path : deck.stats
[DEBUG] 2018-02-27 19:05:04.745 [main] MetamodelGraphWalker - Property path deemed to be circular : deck.stats
[DEBUG] 2018-02-27 19:05:04.745 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.745 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.754 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.758 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(deck)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Deck)
                - SQL table alias mapping - deck1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2018-02-27 19:05:04.759 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [NONE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:05:04.759 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8a8b75]
[DEBUG] 2018-02-27 19:05:04.759 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.760 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72be135f]
[DEBUG] 2018-02-27 19:05:04.760 [main] MetamodelGraphWalker - Visiting attribute path : deck.card_set
[DEBUG] 2018-02-27 19:05:04.760 [main] MetamodelGraphWalker - Visiting attribute path : deck.mana_cost
[DEBUG] 2018-02-27 19:05:04.760 [main] MetamodelGraphWalker - Visiting attribute path : deck.name
[DEBUG] 2018-02-27 19:05:04.760 [main] MetamodelGraphWalker - Visiting attribute path : deck.rarity
[DEBUG] 2018-02-27 19:05:04.760 [main] MetamodelGraphWalker - Visiting attribute path : deck.stats
[DEBUG] 2018-02-27 19:05:04.760 [main] MetamodelGraphWalker - Property path deemed to be circular : deck.stats
[DEBUG] 2018-02-27 19:05:04.760 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.760 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.760 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.760 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(deck)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Deck)
                - SQL table alias mapping - deck1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2018-02-27 19:05:04.760 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [READ]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:05:04.761 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd2f0dc]
[DEBUG] 2018-02-27 19:05:04.761 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.761 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c42b421]
[DEBUG] 2018-02-27 19:05:04.761 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.761 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.761 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.761 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:05:04.761 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.761 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e37590]
[DEBUG] 2018-02-27 19:05:04.761 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.761 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@701a32]
[DEBUG] 2018-02-27 19:05:04.761 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.761 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.762 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.762 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:05:04.762 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE_NOWAIT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.762 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39aa45a1]
[DEBUG] 2018-02-27 19:05:04.762 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.762 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27cbfddf]
[DEBUG] 2018-02-27 19:05:04.762 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.762 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.762 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.762 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:05:04.763 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE_SKIPLOCKED]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.763 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27ead29e]
[DEBUG] 2018-02-27 19:05:04.763 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.763 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40620d8e]
[DEBUG] 2018-02-27 19:05:04.763 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.763 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.763 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.763 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:05:04.763 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [FORCE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.763 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383f3558]
[DEBUG] 2018-02-27 19:05:04.763 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.763 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@352e612e]
[DEBUG] 2018-02-27 19:05:04.763 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.764 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.764 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.764 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:05:04.764 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_READ]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? lock in share mode
[DEBUG] 2018-02-27 19:05:04.764 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
[DEBUG] 2018-02-27 19:05:04.764 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.764 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea94d6a]
[DEBUG] 2018-02-27 19:05:04.764 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.764 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.764 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.765 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:05:04.765 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_WRITE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.765 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28486680]
[DEBUG] 2018-02-27 19:05:04.765 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.765 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1e3ac1]
[DEBUG] 2018-02-27 19:05:04.765 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.765 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.765 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.765 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:05:04.765 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_FORCE_INCREMENT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.765 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e78fcf5]
[DEBUG] 2018-02-27 19:05:04.765 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.766 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b8ee898]
[DEBUG] 2018-02-27 19:05:04.766 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.766 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.766 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.766 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:05:04.766 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [OPTIMISTIC]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-02-27 19:05:04.766 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d151a]
[DEBUG] 2018-02-27 19:05:04.766 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.766 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5300f14a]
[DEBUG] 2018-02-27 19:05:04.766 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.766 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.766 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.767 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:05:04.767 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [OPTIMISTIC_FORCE_INCREMENT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-02-27 19:05:04.777 [main] Loader - Static select for action ACTION_MERGE on entity com.hearthstone.entity.Stats: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-02-27 19:05:04.777 [main] Loader - Static select for action ACTION_REFRESH on entity com.hearthstone.entity.Stats: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-02-27 19:05:04.777 [main] AbstractEntityPersister - Static SQL for entity: com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:05:04.777 [main] AbstractEntityPersister -  Version select: select id from deck where id =?
[DEBUG] 2018-02-27 19:05:04.777 [main] AbstractEntityPersister -  Snapshot select: select deck_.id, deck_.card_set as card_set2_0_, deck_.mana_cost as mana_cos3_0_, deck_.name as name4_0_, deck_.rarity as rarity5_0_ from deck deck_ where deck_.id=?
[DEBUG] 2018-02-27 19:05:04.777 [main] AbstractEntityPersister -  Insert 0: insert into deck (card_set, mana_cost, name, rarity, id) values (?, ?, ?, ?, ?)
[DEBUG] 2018-02-27 19:05:04.777 [main] AbstractEntityPersister -  Update 0: update deck set card_set=?, mana_cost=?, name=?, rarity=? where id=?
[DEBUG] 2018-02-27 19:05:04.777 [main] AbstractEntityPersister -  Delete 0: delete from deck where id=?
[DEBUG] 2018-02-27 19:05:04.777 [main] AbstractEntityPersister -  Identity insert: insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-02-27 19:05:04.777 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757194dc]
[DEBUG] 2018-02-27 19:05:04.777 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.777 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.777 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.778 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.778 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.778 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6dc1484]
[DEBUG] 2018-02-27 19:05:04.779 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@411291e5]
[DEBUG] 2018-02-27 19:05:04.780 [main] MetamodelGraphWalker - Visiting attribute path : stats.deck
[DEBUG] 2018-02-27 19:05:04.780 [main] MetamodelGraphWalker - Property path deemed to be circular : stats.deck
[DEBUG] 2018-02-27 19:05:04.781 [main] MetamodelGraphWalker - Visiting attribute path : stats.description
[DEBUG] 2018-02-27 19:05:04.781 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.781 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.783 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(stats)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.hearthstone.entity.Deck.stats)
                - SQL table alias mapping - stats1_
                - alias suffix - 1_
                - suffixed key columns - {deck_id3_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.hearthstone.entity.Stats)
                      - SQL table alias mapping - stats1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2018-02-27 19:05:04.783 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [NONE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:05:04.783 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23eee4b8]
[DEBUG] 2018-02-27 19:05:04.783 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.783 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.783 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.783 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.783 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.783 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a9800f8]
[DEBUG] 2018-02-27 19:05:04.783 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143d9a93]
[DEBUG] 2018-02-27 19:05:04.783 [main] MetamodelGraphWalker - Visiting attribute path : stats.deck
[DEBUG] 2018-02-27 19:05:04.783 [main] MetamodelGraphWalker - Property path deemed to be circular : stats.deck
[DEBUG] 2018-02-27 19:05:04.783 [main] MetamodelGraphWalker - Visiting attribute path : stats.description
[DEBUG] 2018-02-27 19:05:04.783 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.783 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.784 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(stats)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.hearthstone.entity.Deck.stats)
                - SQL table alias mapping - stats1_
                - alias suffix - 1_
                - suffixed key columns - {deck_id3_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.hearthstone.entity.Stats)
                      - SQL table alias mapping - stats1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2018-02-27 19:05:04.784 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [READ]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:05:04.784 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b5caf08]
[DEBUG] 2018-02-27 19:05:04.784 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.784 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.784 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.784 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.784 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.784 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70807224]
[DEBUG] 2018-02-27 19:05:04.784 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
[DEBUG] 2018-02-27 19:05:04.784 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.784 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.785 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:05:04.785 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.785 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400d912a]
[DEBUG] 2018-02-27 19:05:04.785 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.785 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.785 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.785 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.785 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.785 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a94b64e]
[DEBUG] 2018-02-27 19:05:04.785 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
[DEBUG] 2018-02-27 19:05:04.785 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.785 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.785 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:05:04.785 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE_NOWAIT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.785 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12477988]
[DEBUG] 2018-02-27 19:05:04.786 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.786 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.786 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.786 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.786 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.786 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73d69c0f]
[DEBUG] 2018-02-27 19:05:04.786 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
[DEBUG] 2018-02-27 19:05:04.786 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.786 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.786 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:05:04.786 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE_SKIPLOCKED]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.786 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d01dfa5]
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.787 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d400943]
[DEBUG] 2018-02-27 19:05:04.787 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
[DEBUG] 2018-02-27 19:05:04.787 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.787 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.787 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:05:04.787 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [FORCE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.787 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ff1390]
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.787 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.787 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@781a9412]
[DEBUG] 2018-02-27 19:05:04.788 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
[DEBUG] 2018-02-27 19:05:04.788 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.788 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.788 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:05:04.788 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_READ]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? lock in share mode
[DEBUG] 2018-02-27 19:05:04.788 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e698c7]
[DEBUG] 2018-02-27 19:05:04.788 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.788 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.788 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.788 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.788 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.788 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@267bbe1a]
[DEBUG] 2018-02-27 19:05:04.788 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
[DEBUG] 2018-02-27 19:05:04.788 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.789 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.789 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:05:04.789 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_WRITE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.789 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@389562d6]
[DEBUG] 2018-02-27 19:05:04.789 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.789 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.789 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.789 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.789 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.789 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2160e52a]
[DEBUG] 2018-02-27 19:05:04.789 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[DEBUG] 2018-02-27 19:05:04.789 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.789 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.789 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:05:04.789 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_FORCE_INCREMENT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:05:04.790 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a60c416]
[DEBUG] 2018-02-27 19:05:04.790 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.790 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.790 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.790 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.790 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.790 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@469d003c]
[DEBUG] 2018-02-27 19:05:04.790 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b410923]
[DEBUG] 2018-02-27 19:05:04.790 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.790 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.791 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:05:04.791 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [OPTIMISTIC]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=?
[DEBUG] 2018-02-27 19:05:04.791 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bd2029]
[DEBUG] 2018-02-27 19:05:04.791 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:05:04.791 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:05:04.791 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:05:04.791 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:05:04.791 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:05:04.791 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e8fadb0]
[DEBUG] 2018-02-27 19:05:04.791 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
[DEBUG] 2018-02-27 19:05:04.791 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.791 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.791 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:05:04.791 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [OPTIMISTIC_FORCE_INCREMENT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=?
[DEBUG] 2018-02-27 19:05:04.793 [main] Loader - Static select for action ACTION_MERGE on entity com.hearthstone.entity.Deck: select deck0_.id as id1_0_1_, deck0_.card_set as card_set2_0_1_, deck0_.mana_cost as mana_cos3_0_1_, deck0_.name as name4_0_1_, deck0_.rarity as rarity5_0_1_, stats1_.deck_id as deck_id3_1_3_, stats1_.id as id1_1_3_, stats1_.id as id1_1_0_, stats1_.deck_id as deck_id3_1_0_, stats1_.description as descript2_1_0_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:05:04.793 [main] Loader - Static select for action ACTION_REFRESH on entity com.hearthstone.entity.Deck: select deck0_.id as id1_0_1_, deck0_.card_set as card_set2_0_1_, deck0_.mana_cost as mana_cos3_0_1_, deck0_.name as name4_0_1_, deck0_.rarity as rarity5_0_1_, stats1_.deck_id as deck_id3_1_3_, stats1_.id as id1_1_3_, stats1_.id as id1_1_0_, stats1_.deck_id as deck_id3_1_0_, stats1_.description as descript2_1_0_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:05:04.796 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41e1455d]
[DEBUG] 2018-02-27 19:05:04.796 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e558728]
[DEBUG] 2018-02-27 19:05:04.796 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:05:04.796 [main] MetamodelGraphWalker - Property path deemed to be circular : deck
[DEBUG] 2018-02-27 19:05:04.796 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:05:04.796 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:05:04.798 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:05:04.798 [main] LoadPlanTreePrinter - LoadPlan(collection=com.hearthstone.entity.Deck.stats)
    - Returns
       - CollectionReturnImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:0>, path=[com.hearthstone.entity.Deck.stats])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:1>, path=[com.hearthstone.entity.Deck.stats].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.hearthstone.entity.Deck.stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {deck_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Stats)
                - SQL table alias mapping - stats0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2018-02-27 19:05:04.799 [main] CollectionLoader - Static select for collection com.hearthstone.entity.Deck.stats: select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:05:04.817 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-02-27 19:05:04.817 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-02-27 19:05:04.818 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-02-27 19:05:04.821 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-02-27 19:05:04.821 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-02-27 19:05:04.821 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-02-27 19:05:04.823 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@27f1bbe0
[DEBUG] 2018-02-27 19:05:04.824 [main] SessionFactoryRegistry - Registering SessionFactory: 6d71d758-f735-431e-a028-bc325ca72715 (<unnamed>)
[DEBUG] 2018-02-27 19:05:04.824 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-02-27 19:05:04.880 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-02-27 19:05:04.895 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:05:04.915 [main] CollectionLoadContext - No collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:04.915 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:04.915 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#4
[DEBUG] 2018-02-27 19:05:04.915 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:04.918 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:05:04.936 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:05:04.950 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-02-27 19:05:04.952 [main] SQL - insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-02-27 19:05:04.954 [main] IdentifierGeneratorHelper - Natively generated identity: 14
[DEBUG] 2018-02-27 19:05:04.954 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:04.956 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-02-27 19:05:04.956 [main] SQL - insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-02-27 19:05:04.957 [main] IdentifierGeneratorHelper - Natively generated identity: 10
[DEBUG] 2018-02-27 19:05:04.958 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:04.959 [main] TransactionImpl - committing
[DEBUG] 2018-02-27 19:05:04.959 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-27 19:05:04.960 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-27 19:05:04.963 [main] Collections - Collection found: [com.hearthstone.entity.Deck.stats#14], was: [<unreferenced>] (initialized)
[DEBUG] 2018-02-27 19:05:04.964 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2018-02-27 19:05:04.965 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-02-27 19:05:04.965 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-27 19:05:04.966 [main] EntityPrinter - com.hearthstone.entity.Deck{card_set=Basic, stats=[com.hearthstone.entity.Stats#10], mana_cost=4, name=Auchenai Soulpriest, id=14, rarity=Rare}
[DEBUG] 2018-02-27 19:05:04.966 [main] EntityPrinter - com.hearthstone.entity.Stats{deck=com.hearthstone.entity.Deck#14, description=Stat1, id=10}
[DEBUG] 2018-02-27 19:05:04.969 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:04.969 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:04.972 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:05:04.974 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:04.975 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:04.977 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#14]
[DEBUG] 2018-02-27 19:05:04.978 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#14]
[DEBUG] 2018-02-27 19:05:04.978 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#14]
[DEBUG] 2018-02-27 19:05:04.978 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#10]
[DEBUG] 2018-02-27 19:05:04.978 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#10]
[DEBUG] 2018-02-27 19:05:04.978 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:04.979 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#14]
[DEBUG] 2018-02-27 19:05:04.979 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:04.979 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:04.979 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#14
[DEBUG] 2018-02-27 19:05:04.979 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:04.987 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:05:04.988 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:04.988 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:04.988 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.hearthstone.entity.Deck.stats#2]
[DEBUG] 2018-02-27 19:05:04.988 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#2]
[DEBUG] 2018-02-27 19:05:04.988 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#2]
[DEBUG] 2018-02-27 19:05:04.988 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:04.988 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#2]
[DEBUG] 2018-02-27 19:05:04.988 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:04.988 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:04.989 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#2
[DEBUG] 2018-02-27 19:05:04.989 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.021 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:05:05.022 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-02-27 19:05:05.022 [main] SQL - insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-02-27 19:05:05.023 [main] IdentifierGeneratorHelper - Natively generated identity: 15
[DEBUG] 2018-02-27 19:05:05.023 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.023 [main] TransactionImpl - committing
[DEBUG] 2018-02-27 19:05:05.024 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-27 19:05:05.024 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-27 19:05:05.024 [main] Collections - Collection found: [com.hearthstone.entity.Deck.stats#15], was: [<unreferenced>] (initialized)
[DEBUG] 2018-02-27 19:05:05.024 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-02-27 19:05:05.024 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-02-27 19:05:05.024 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-27 19:05:05.024 [main] EntityPrinter - com.hearthstone.entity.Deck{card_set=Basic, stats=[], mana_cost=4, name=Auchenai Soulpriest, id=15, rarity=Rare}
[DEBUG] 2018-02-27 19:05:05.032 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.033 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.033 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:05:05.034 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.035 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:05.035 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.hearthstone.entity.Deck.stats#15]
[DEBUG] 2018-02-27 19:05:05.035 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#15]
[DEBUG] 2018-02-27 19:05:05.035 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#15]
[DEBUG] 2018-02-27 19:05:05.035 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.035 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#15]
[DEBUG] 2018-02-27 19:05:05.035 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.035 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.035 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#15
[DEBUG] 2018-02-27 19:05:05.035 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.062 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:05:05.064 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.064 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#1
[DEBUG] 2018-02-27 19:05:05.064 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.064 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:05:05.074 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:05:05.075 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.076 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:05.076 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#2]
[DEBUG] 2018-02-27 19:05:05.077 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#2]
[DEBUG] 2018-02-27 19:05:05.077 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#6]
[DEBUG] 2018-02-27 19:05:05.077 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#6]
[DEBUG] 2018-02-27 19:05:05.077 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.078 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-02-27 19:05:05.078 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:05:05.079 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-02-27 19:05:05.079 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.080 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-02-27 19:05:05.080 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.080 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-02-27 19:05:05.080 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.080 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.080 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-02-27 19:05:05.080 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#2
[DEBUG] 2018-02-27 19:05:05.080 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.091 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:05:05.092 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.092 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:05.092 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#4]
[DEBUG] 2018-02-27 19:05:05.092 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#4]
[DEBUG] 2018-02-27 19:05:05.092 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#8]
[DEBUG] 2018-02-27 19:05:05.092 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#8]
[DEBUG] 2018-02-27 19:05:05.093 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.093 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:05:05.093 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:05:05.093 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:05:05.094 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.094 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:05:05.094 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.094 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:05:05.094 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.094 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.094 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-02-27 19:05:05.094 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#4
[DEBUG] 2018-02-27 19:05:05.094 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.095 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:05:05.097 [main] TransactionImpl - committing
[DEBUG] 2018-02-27 19:05:05.097 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-27 19:05:05.097 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-27 19:05:05.097 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-02-27 19:05:05.097 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-02-27 19:05:05.097 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-27 19:05:05.098 [main] EntityPrinter - com.hearthstone.entity.Stats{deck=com.hearthstone.entity.Deck#8, description=Puyo, id=4}
[DEBUG] 2018-02-27 19:05:05.102 [main] SQL - update stats set deck_id=?, description=? where id=?
[DEBUG] 2018-02-27 19:05:05.105 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.106 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.106 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-02-27 19:05:05.106 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:05:05.107 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.107 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:05.107 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#4]
[DEBUG] 2018-02-27 19:05:05.107 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#4]
[DEBUG] 2018-02-27 19:05:05.107 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#8]
[DEBUG] 2018-02-27 19:05:05.108 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#8]
[DEBUG] 2018-02-27 19:05:05.108 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.108 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:05:05.108 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:05:05.108 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:05:05.108 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.109 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:05:05.109 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.109 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:05:05.109 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.109 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.109 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-02-27 19:05:05.109 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#4
[DEBUG] 2018-02-27 19:05:05.109 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.116 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:05:05.118 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.118 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:05.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.119 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-02-27 19:05:05.119 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:05.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.119 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-02-27 19:05:05.119 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:05.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.120 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-02-27 19:05:05.120 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:05.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.120 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-02-27 19:05:05.120 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-02-27 19:05:05.120 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#3]
[DEBUG] 2018-02-27 19:05:05.120 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#3]
[DEBUG] 2018-02-27 19:05:05.120 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#5]
[DEBUG] 2018-02-27 19:05:05.121 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#5]
[DEBUG] 2018-02-27 19:05:05.121 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#7]
[DEBUG] 2018-02-27 19:05:05.121 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#7]
[DEBUG] 2018-02-27 19:05:05.121 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#9]
[DEBUG] 2018-02-27 19:05:05.121 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#9]
[DEBUG] 2018-02-27 19:05:05.121 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.121 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.121 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.122 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.122 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#1
[DEBUG] 2018-02-27 19:05:05.122 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.123 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:05:05.123 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-02-27 19:05:05.123 [main] SQL - insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-02-27 19:05:05.126 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2018-02-27 19:05:05.126 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.126 [main] TransactionImpl - committing
[DEBUG] 2018-02-27 19:05:05.126 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-27 19:05:05.126 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-27 19:05:05.126 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-02-27 19:05:05.126 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-02-27 19:05:05.126 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-27 19:05:05.126 [main] EntityPrinter - com.hearthstone.entity.Stats{deck=com.hearthstone.entity.Deck#1, description=Control, id=11}
[DEBUG] 2018-02-27 19:05:05.132 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.132 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:05:05.133 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:05:05.133 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.133 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:05:05.134 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#11]
[DEBUG] 2018-02-27 19:05:05.137 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#11]
[DEBUG] 2018-02-27 19:05:05.138 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-02-27 19:05:05.138 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-02-27 19:05:05.138 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.139 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.139 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:05:05.139 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.139 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:05:05.140 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.140 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-02-27 19:05:05.140 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.140 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-02-27 19:05:05.140 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.140 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-02-27 19:05:05.140 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.141 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-02-27 19:05:05.141 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.141 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#3]
[DEBUG] 2018-02-27 19:05:05.141 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#3]
[DEBUG] 2018-02-27 19:05:05.141 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#5]
[DEBUG] 2018-02-27 19:05:05.142 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#5]
[DEBUG] 2018-02-27 19:05:05.142 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#7]
[DEBUG] 2018-02-27 19:05:05.142 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#7]
[DEBUG] 2018-02-27 19:05:05.142 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#9]
[DEBUG] 2018-02-27 19:05:05.143 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#9]
[DEBUG] 2018-02-27 19:05:05.143 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.143 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:05:05.143 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:05:05.143 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:05:05.143 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-02-27 19:05:05.143 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#11
[DEBUG] 2018-02-27 19:05:05.143 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
