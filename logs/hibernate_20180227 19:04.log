[DEBUG] 2018-02-27 19:03:09.920 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-02-27 19:03:09.922 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-02-27 19:03:09.924 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-02-27 19:03:09.982 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-02-27 19:03:09.983 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-02-27 19:03:10.022 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-02-27 19:03:10.022 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-02-27 19:03:10.029 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-02-27 19:03:10.517 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-02-27 19:03:10.532 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-02-27 19:03:10.538 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-02-27 19:03:10.552 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a7ed1f
[DEBUG] 2018-02-27 19:03:10.552 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a7ed1f
[DEBUG] 2018-02-27 19:03:10.552 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a7ed1f
[DEBUG] 2018-02-27 19:03:10.553 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f0fd5a0
[DEBUG] 2018-02-27 19:03:10.554 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e928fbf
[DEBUG] 2018-02-27 19:03:10.554 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e32ccc5
[DEBUG] 2018-02-27 19:03:10.555 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@895e367
[DEBUG] 2018-02-27 19:03:10.555 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@895e367
[DEBUG] 2018-02-27 19:03:10.555 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@895e367
[DEBUG] 2018-02-27 19:03:10.556 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4dd6fd0a
[DEBUG] 2018-02-27 19:03:10.556 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4dd6fd0a
[DEBUG] 2018-02-27 19:03:10.556 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4dd6fd0a
[DEBUG] 2018-02-27 19:03:10.557 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4a00d9cf
[DEBUG] 2018-02-27 19:03:10.557 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4a00d9cf
[DEBUG] 2018-02-27 19:03:10.557 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4a00d9cf
[DEBUG] 2018-02-27 19:03:10.558 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4c012563
[DEBUG] 2018-02-27 19:03:10.558 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4c012563
[DEBUG] 2018-02-27 19:03:10.558 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4c012563
[DEBUG] 2018-02-27 19:03:10.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20d7d6fb
[DEBUG] 2018-02-27 19:03:10.559 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@20d7d6fb
[DEBUG] 2018-02-27 19:03:10.559 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@20d7d6fb
[DEBUG] 2018-02-27 19:03:10.560 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2fba3fc4
[DEBUG] 2018-02-27 19:03:10.560 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2fba3fc4
[DEBUG] 2018-02-27 19:03:10.560 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fba3fc4
[DEBUG] 2018-02-27 19:03:10.561 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5d99c6b5
[DEBUG] 2018-02-27 19:03:10.561 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5d99c6b5
[DEBUG] 2018-02-27 19:03:10.561 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5d99c6b5
[DEBUG] 2018-02-27 19:03:10.562 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@766653e6
[DEBUG] 2018-02-27 19:03:10.562 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@766653e6
[DEBUG] 2018-02-27 19:03:10.562 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@48c76607
[DEBUG] 2018-02-27 19:03:10.562 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@48c76607
[DEBUG] 2018-02-27 19:03:10.563 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1787bc24
[DEBUG] 2018-02-27 19:03:10.563 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1787bc24
[DEBUG] 2018-02-27 19:03:10.564 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a37d3ed
[DEBUG] 2018-02-27 19:03:10.564 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@52e7a6b2
[DEBUG] 2018-02-27 19:03:10.565 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@44a59da3
[DEBUG] 2018-02-27 19:03:10.565 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44a59da3
[DEBUG] 2018-02-27 19:03:10.566 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4b5189ac
[DEBUG] 2018-02-27 19:03:10.566 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4b5189ac
[DEBUG] 2018-02-27 19:03:10.577 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@135606db
[DEBUG] 2018-02-27 19:03:10.578 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@135606db
[DEBUG] 2018-02-27 19:03:10.579 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@58594a11
[DEBUG] 2018-02-27 19:03:10.579 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@58594a11
[DEBUG] 2018-02-27 19:03:10.580 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@57ad2aa7
[DEBUG] 2018-02-27 19:03:10.580 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@57ad2aa7
[DEBUG] 2018-02-27 19:03:10.581 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4fbe37eb
[DEBUG] 2018-02-27 19:03:10.581 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4fbe37eb
[DEBUG] 2018-02-27 19:03:10.582 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46271dd6
[DEBUG] 2018-02-27 19:03:10.582 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46271dd6
[DEBUG] 2018-02-27 19:03:10.583 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@61eaec38
[DEBUG] 2018-02-27 19:03:10.583 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@61eaec38
[DEBUG] 2018-02-27 19:03:10.586 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27adc16e
[DEBUG] 2018-02-27 19:03:10.586 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27adc16e
[DEBUG] 2018-02-27 19:03:10.587 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3eb81efb
[DEBUG] 2018-02-27 19:03:10.587 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3eb81efb
[DEBUG] 2018-02-27 19:03:10.588 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5cdec700
[DEBUG] 2018-02-27 19:03:10.588 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5cdec700
[DEBUG] 2018-02-27 19:03:10.588 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b7dc788
[DEBUG] 2018-02-27 19:03:10.588 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b7dc788
[DEBUG] 2018-02-27 19:03:10.588 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b7dc788
[DEBUG] 2018-02-27 19:03:10.589 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2812b107
[DEBUG] 2018-02-27 19:03:10.590 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@198d6542
[DEBUG] 2018-02-27 19:03:10.591 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@198d6542
[DEBUG] 2018-02-27 19:03:10.591 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@198d6542
[DEBUG] 2018-02-27 19:03:10.592 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5be49b60
[DEBUG] 2018-02-27 19:03:10.593 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@45a4b042
[DEBUG] 2018-02-27 19:03:10.593 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45a4b042
[DEBUG] 2018-02-27 19:03:10.594 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@f99f5e0
[DEBUG] 2018-02-27 19:03:10.594 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f99f5e0
[DEBUG] 2018-02-27 19:03:10.595 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2474f125
[DEBUG] 2018-02-27 19:03:10.595 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2474f125
[DEBUG] 2018-02-27 19:03:10.596 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4816278d
[DEBUG] 2018-02-27 19:03:10.597 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4816278d
[DEBUG] 2018-02-27 19:03:10.598 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c45d770
[DEBUG] 2018-02-27 19:03:10.598 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c45d770
[DEBUG] 2018-02-27 19:03:10.599 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@147a5d08
[DEBUG] 2018-02-27 19:03:10.600 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1b45c0e
[DEBUG] 2018-02-27 19:03:10.600 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b45c0e
[DEBUG] 2018-02-27 19:03:10.600 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1b45c0e
[DEBUG] 2018-02-27 19:03:10.601 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4416d64f
[DEBUG] 2018-02-27 19:03:10.601 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4416d64f
[DEBUG] 2018-02-27 19:03:10.601 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4416d64f
[DEBUG] 2018-02-27 19:03:10.601 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6ee4d9ab
[DEBUG] 2018-02-27 19:03:10.602 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@13d4992d
[DEBUG] 2018-02-27 19:03:10.615 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@9573584
[DEBUG] 2018-02-27 19:03:10.615 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@9573584
[DEBUG] 2018-02-27 19:03:10.615 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@9573584
[DEBUG] 2018-02-27 19:03:10.618 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6853425f
[DEBUG] 2018-02-27 19:03:10.618 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6853425f
[DEBUG] 2018-02-27 19:03:10.618 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6853425f
[DEBUG] 2018-02-27 19:03:10.618 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7d898981
[DEBUG] 2018-02-27 19:03:10.619 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6c0d7c83
[DEBUG] 2018-02-27 19:03:10.621 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@68dc098b
[DEBUG] 2018-02-27 19:03:10.621 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@68dc098b
[DEBUG] 2018-02-27 19:03:10.622 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d6c53fc
[DEBUG] 2018-02-27 19:03:10.624 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@768fc0f2
[DEBUG] 2018-02-27 19:03:10.624 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@768fc0f2
[DEBUG] 2018-02-27 19:03:10.629 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@63611043
[DEBUG] 2018-02-27 19:03:10.629 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@63611043
[DEBUG] 2018-02-27 19:03:10.630 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73302995
[DEBUG] 2018-02-27 19:03:10.630 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d9e8ef7
[DEBUG] 2018-02-27 19:03:10.631 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@44d52de2
[DEBUG] 2018-02-27 19:03:10.633 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3f57bcad
[DEBUG] 2018-02-27 19:03:10.634 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f57bcad
[DEBUG] 2018-02-27 19:03:10.634 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71e9ebae
[DEBUG] 2018-02-27 19:03:10.634 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73d983ea
[DEBUG] 2018-02-27 19:03:10.634 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@36a5cabc
[DEBUG] 2018-02-27 19:03:10.635 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@432038ec
[DEBUG] 2018-02-27 19:03:10.635 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7daa0fbd
[DEBUG] 2018-02-27 19:03:10.636 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42530531
[DEBUG] 2018-02-27 19:03:10.636 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a3bc7ed
[DEBUG] 2018-02-27 19:03:10.636 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@181e731e
[INFO ] 2018-02-27 19:03:10.646 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/hearthstone
[INFO ] 2018-02-27 19:03:10.646 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-02-27 19:03:10.646 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-02-27 19:03:10.734 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-02-27 19:03:10.776 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.21-0ubuntu0.16.04.1
      major : 5
      minor : 7
[DEBUG] 2018-02-27 19:03:10.776 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-02-27 19:03:10.776 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-02-27 19:03:10.785 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-02-27 19:03:10.809 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-02-27 19:03:10.811 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-02-27 19:03:10.910 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-02-27 19:03:10.910 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-02-27 19:03:10.910 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-02-27 19:03:10.910 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-02-27 19:03:10.911 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-02-27 19:03:10.911 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-02-27 19:03:10.912 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-02-27 19:03:10.912 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-02-27 19:03:10.913 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-02-27 19:03:10.913 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-02-27 19:03:10.913 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-02-27 19:03:10.914 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-02-27 19:03:10.914 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-02-27 19:03:10.914 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-02-27 19:03:11.007 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-02-27 19:03:11.078 [main] AnnotationBinder - Binding entity from annotated class: com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:03:11.162 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-02-27 19:03:11.243 [main] EntityBinder - Import with entity name Deck
[DEBUG] 2018-02-27 19:03:11.249 [main] EntityBinder - Bind entity com.hearthstone.entity.Deck on table deck
[DEBUG] 2018-02-27 19:03:11.349 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.351 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-02-27 19:03:11.352 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:id]
[DEBUG] 2018-02-27 19:03:11.353 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-02-27 19:03:11.355 [main] PropertyBinder - Building property id
[DEBUG] 2018-02-27 19:03:11.448 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.448 [main] PropertyBinder - MetadataSourceProcessor property card_set with lazy=false
[DEBUG] 2018-02-27 19:03:11.448 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:card_set]
[DEBUG] 2018-02-27 19:03:11.448 [main] SimpleValueBinder - building SimpleValue for card_set
[DEBUG] 2018-02-27 19:03:11.448 [main] PropertyBinder - Building property card_set
[DEBUG] 2018-02-27 19:03:11.449 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=mana_cost, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.449 [main] PropertyBinder - MetadataSourceProcessor property mana_cost with lazy=false
[DEBUG] 2018-02-27 19:03:11.449 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:mana_cost]
[DEBUG] 2018-02-27 19:03:11.449 [main] SimpleValueBinder - building SimpleValue for mana_cost
[DEBUG] 2018-02-27 19:03:11.449 [main] PropertyBinder - Building property mana_cost
[DEBUG] 2018-02-27 19:03:11.449 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.449 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-02-27 19:03:11.449 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:name]
[DEBUG] 2018-02-27 19:03:11.449 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-02-27 19:03:11.449 [main] PropertyBinder - Building property name
[DEBUG] 2018-02-27 19:03:11.450 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.450 [main] PropertyBinder - MetadataSourceProcessor property rarity with lazy=false
[DEBUG] 2018-02-27 19:03:11.450 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Deck:rarity]
[DEBUG] 2018-02-27 19:03:11.450 [main] SimpleValueBinder - building SimpleValue for rarity
[DEBUG] 2018-02-27 19:03:11.450 [main] PropertyBinder - Building property rarity
[DEBUG] 2018-02-27 19:03:11.451 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-02-27 19:03:11.451 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=stats, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.453 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.459 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.459 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(deck), mappingColumn=stats_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.460 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='stats_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-02-27 19:03:11.460 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-02-27 19:03:11.461 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='deck'}
[DEBUG] 2018-02-27 19:03:11.461 [main] CollectionBinder - Collection role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:11.463 [main] PropertyBinder - Building property stats
[DEBUG] 2018-02-27 19:03:11.464 [main] AnnotationBinder - Binding entity from annotated class: com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:03:11.464 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-02-27 19:03:11.464 [main] EntityBinder - Import with entity name Stats
[DEBUG] 2018-02-27 19:03:11.464 [main] EntityBinder - Bind entity com.hearthstone.entity.Stats on table stats
[DEBUG] 2018-02-27 19:03:11.466 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.466 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-02-27 19:03:11.466 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Stats:id]
[DEBUG] 2018-02-27 19:03:11.466 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-02-27 19:03:11.466 [main] PropertyBinder - Building property id
[DEBUG] 2018-02-27 19:03:11.466 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-02-27 19:03:11.466 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=deck, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.468 [main] PropertyBinder - Building property deck
[DEBUG] 2018-02-27 19:03:11.468 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(stats), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-27 19:03:11.468 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2018-02-27 19:03:11.468 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hearthstone.entity.Stats:description]
[DEBUG] 2018-02-27 19:03:11.468 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2018-02-27 19:03:11.468 [main] PropertyBinder - Building property description
[DEBUG] 2018-02-27 19:03:11.469 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-02-27 19:03:11.469 [main] SimpleValueBinder - Starting fillSimpleValue for card_set
[DEBUG] 2018-02-27 19:03:11.469 [main] SimpleValueBinder - Starting fillSimpleValue for mana_cost
[DEBUG] 2018-02-27 19:03:11.469 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-02-27 19:03:11.469 [main] SimpleValueBinder - Starting fillSimpleValue for rarity
[DEBUG] 2018-02-27 19:03:11.469 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-02-27 19:03:11.469 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2018-02-27 19:03:11.546 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [deck]
[DEBUG] 2018-02-27 19:03:11.546 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [stats]
[DEBUG] 2018-02-27 19:03:11.547 [main] CollectionSecondPass - Second pass for collection: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:11.548 [main] CollectionBinder - Binding a OneToMany: com.hearthstone.entity.Deck.stats through a foreign key
[DEBUG] 2018-02-27 19:03:11.549 [main] CollectionBinder - Mapping collection: com.hearthstone.entity.Deck.stats -> stats
[DEBUG] 2018-02-27 19:03:11.551 [main] TableBinder - Retrieving property com.hearthstone.entity.Stats.deck
[DEBUG] 2018-02-27 19:03:11.551 [main] CollectionSecondPass - Mapped collection key: deck_id, one-to-many: com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:03:11.552 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:03:11.557 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:03:12.192 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-02-27 19:03:12.193 [main] Settings - SessionFactory name : null
[DEBUG] 2018-02-27 19:03:12.193 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-02-27 19:03:12.193 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-02-27 19:03:12.193 [main] Settings - Statistics: disabled
[DEBUG] 2018-02-27 19:03:12.193 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-02-27 19:03:12.193 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Named query checking : enabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@759fad4
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-02-27 19:03:12.194 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-02-27 19:03:12.195 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-02-27 19:03:12.195 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-02-27 19:03:12.195 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-02-27 19:03:12.195 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-02-27 19:03:12.195 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-02-27 19:03:12.195 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-02-27 19:03:12.195 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-02-27 19:03:12.195 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-02-27 19:03:12.236 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-02-27 19:03:12.236 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/deploy.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/javaws.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfxswt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-oracle/jre/lib/plugin.jar:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/home/student/IdeaProjects/hearthstoneDeckTracker1/target/test-classes:/home/student/IdeaProjects/hearthstoneDeckTracker1/target/classes:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/student/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/student/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/home/student/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/home/student/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.1.0/junit-jupiter-api-5.1.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.1.0/junit-platform-commons-1.1.0.jar:/home/student/intellij/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket36512, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=/home/student, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-oracle/jre, file.separator=/, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_144-b01, user.name=student, path.separator=:, hibernate.connection.username=root, os.version=4.4.0-112-generic, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hearthstone, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_144, user.dir=/home/student/IdeaProjects/hearthstoneDeckTracker1, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3b1bb3ab, java.library.path=/home/student/intellij/bin::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.144-b01, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/hearthstone, java.class.version=52.0}
[DEBUG] 2018-02-27 19:03:12.250 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-02-27 19:03:12.250 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-02-27 19:03:12.251 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-02-27 19:03:12.284 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Stats] is safe
[DEBUG] 2018-02-27 19:03:12.284 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:03:12.296 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Stats] is safe
[DEBUG] 2018-02-27 19:03:12.296 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:03:12.336 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Deck] is safe
[DEBUG] 2018-02-27 19:03:12.336 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:03:12.338 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.hearthstone.entity.Deck] is safe
[DEBUG] 2018-02-27 19:03:12.338 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:03:12.349 [main] AbstractCollectionPersister - Static SQL for collection: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:12.349 [main] AbstractCollectionPersister -  Row insert: update stats set deck_id=? where id=?
[DEBUG] 2018-02-27 19:03:12.349 [main] AbstractCollectionPersister -  Row update: update stats set  where id=?
[DEBUG] 2018-02-27 19:03:12.349 [main] AbstractCollectionPersister -  Row delete: update stats set deck_id=null where deck_id=? and id=?
[DEBUG] 2018-02-27 19:03:12.349 [main] AbstractCollectionPersister -  One-shot delete: update stats set deck_id=null where deck_id=?
[DEBUG] 2018-02-27 19:03:12.352 [main] AbstractEntityPersister - Static SQL for entity: com.hearthstone.entity.Stats
[DEBUG] 2018-02-27 19:03:12.352 [main] AbstractEntityPersister -  Version select: select id from stats where id =?
[DEBUG] 2018-02-27 19:03:12.352 [main] AbstractEntityPersister -  Snapshot select: select stats_.id, stats_.deck_id as deck_id3_1_, stats_.description as descript2_1_ from stats stats_ where stats_.id=?
[DEBUG] 2018-02-27 19:03:12.352 [main] AbstractEntityPersister -  Insert 0: insert into stats (deck_id, description, id) values (?, ?, ?)
[DEBUG] 2018-02-27 19:03:12.352 [main] AbstractEntityPersister -  Update 0: update stats set deck_id=?, description=? where id=?
[DEBUG] 2018-02-27 19:03:12.352 [main] AbstractEntityPersister -  Delete 0: delete from stats where id=?
[DEBUG] 2018-02-27 19:03:12.352 [main] AbstractEntityPersister -  Identity insert: insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-02-27 19:03:12.367 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@263558c9]
[DEBUG] 2018-02-27 19:03:12.368 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.371 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534243e4]
[DEBUG] 2018-02-27 19:03:12.373 [main] MetamodelGraphWalker - Visiting attribute path : deck.card_set
[DEBUG] 2018-02-27 19:03:12.373 [main] MetamodelGraphWalker - Visiting attribute path : deck.mana_cost
[DEBUG] 2018-02-27 19:03:12.373 [main] MetamodelGraphWalker - Visiting attribute path : deck.name
[DEBUG] 2018-02-27 19:03:12.373 [main] MetamodelGraphWalker - Visiting attribute path : deck.rarity
[DEBUG] 2018-02-27 19:03:12.373 [main] MetamodelGraphWalker - Visiting attribute path : deck.stats
[DEBUG] 2018-02-27 19:03:12.373 [main] MetamodelGraphWalker - Property path deemed to be circular : deck.stats
[DEBUG] 2018-02-27 19:03:12.373 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.373 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.382 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.387 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(deck)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Deck)
                - SQL table alias mapping - deck1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2018-02-27 19:03:12.388 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [NONE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:03:12.389 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a60ee36]
[DEBUG] 2018-02-27 19:03:12.389 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.389 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58faa93b]
[DEBUG] 2018-02-27 19:03:12.389 [main] MetamodelGraphWalker - Visiting attribute path : deck.card_set
[DEBUG] 2018-02-27 19:03:12.389 [main] MetamodelGraphWalker - Visiting attribute path : deck.mana_cost
[DEBUG] 2018-02-27 19:03:12.389 [main] MetamodelGraphWalker - Visiting attribute path : deck.name
[DEBUG] 2018-02-27 19:03:12.389 [main] MetamodelGraphWalker - Visiting attribute path : deck.rarity
[DEBUG] 2018-02-27 19:03:12.389 [main] MetamodelGraphWalker - Visiting attribute path : deck.stats
[DEBUG] 2018-02-27 19:03:12.389 [main] MetamodelGraphWalker - Property path deemed to be circular : deck.stats
[DEBUG] 2018-02-27 19:03:12.389 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.389 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.389 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.390 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(deck)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Deck)
                - SQL table alias mapping - deck1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2018-02-27 19:03:12.390 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [READ]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:03:12.390 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@127d7908]
[DEBUG] 2018-02-27 19:03:12.390 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.390 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6622a690]
[DEBUG] 2018-02-27 19:03:12.390 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.390 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.390 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.390 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:03:12.390 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.390 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30b9eadd]
[DEBUG] 2018-02-27 19:03:12.390 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.390 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@412c995d]
[DEBUG] 2018-02-27 19:03:12.391 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.391 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.391 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.391 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:03:12.391 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE_NOWAIT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.391 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3249a1ce]
[DEBUG] 2018-02-27 19:03:12.391 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.391 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f4919b0]
[DEBUG] 2018-02-27 19:03:12.391 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.391 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.391 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.391 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:03:12.392 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [UPGRADE_SKIPLOCKED]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8a8b75]
[DEBUG] 2018-02-27 19:03:12.392 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72be135f]
[DEBUG] 2018-02-27 19:03:12.392 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.392 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.392 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.392 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:03:12.392 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [FORCE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@155d1021]
[DEBUG] 2018-02-27 19:03:12.392 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.392 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e647e59]
[DEBUG] 2018-02-27 19:03:12.392 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.393 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.393 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.393 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:03:12.393 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_READ]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? lock in share mode
[DEBUG] 2018-02-27 19:03:12.393 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c42b421]
[DEBUG] 2018-02-27 19:03:12.393 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.393 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@deb3b60]
[DEBUG] 2018-02-27 19:03:12.393 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.393 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.393 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.393 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:03:12.394 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_WRITE]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@701a32]
[DEBUG] 2018-02-27 19:03:12.394 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73aff8f1]
[DEBUG] 2018-02-27 19:03:12.394 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.394 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.394 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.394 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:03:12.394 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [PESSIMISTIC_FORCE_INCREMENT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27cbfddf]
[DEBUG] 2018-02-27 19:03:12.394 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c060c8f]
[DEBUG] 2018-02-27 19:03:12.394 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.394 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.395 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.395 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:03:12.395 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [OPTIMISTIC]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-02-27 19:03:12.395 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40620d8e]
[DEBUG] 2018-02-27 19:03:12.395 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.395 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b07ee3]
[DEBUG] 2018-02-27 19:03:12.395 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.395 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.395 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.395 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Stats)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Stats)
          - EntityAttributeFetchImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Stats.deck)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-27 19:03:12.395 [main] EntityLoader - Static select for entity com.hearthstone.entity.Stats [OPTIMISTIC_FORCE_INCREMENT]: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-02-27 19:03:12.405 [main] Loader - Static select for action ACTION_MERGE on entity com.hearthstone.entity.Stats: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-02-27 19:03:12.406 [main] Loader - Static select for action ACTION_REFRESH on entity com.hearthstone.entity.Stats: select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_ from stats stats0_ where stats0_.id=?
[DEBUG] 2018-02-27 19:03:12.406 [main] AbstractEntityPersister - Static SQL for entity: com.hearthstone.entity.Deck
[DEBUG] 2018-02-27 19:03:12.406 [main] AbstractEntityPersister -  Version select: select id from deck where id =?
[DEBUG] 2018-02-27 19:03:12.406 [main] AbstractEntityPersister -  Snapshot select: select deck_.id, deck_.card_set as card_set2_0_, deck_.mana_cost as mana_cos3_0_, deck_.name as name4_0_, deck_.rarity as rarity5_0_ from deck deck_ where deck_.id=?
[DEBUG] 2018-02-27 19:03:12.406 [main] AbstractEntityPersister -  Insert 0: insert into deck (card_set, mana_cost, name, rarity, id) values (?, ?, ?, ?, ?)
[DEBUG] 2018-02-27 19:03:12.406 [main] AbstractEntityPersister -  Update 0: update deck set card_set=?, mana_cost=?, name=?, rarity=? where id=?
[DEBUG] 2018-02-27 19:03:12.406 [main] AbstractEntityPersister -  Delete 0: delete from deck where id=?
[DEBUG] 2018-02-27 19:03:12.406 [main] AbstractEntityPersister -  Identity insert: insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-02-27 19:03:12.406 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6f623d]
[DEBUG] 2018-02-27 19:03:12.406 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.406 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.406 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.406 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.406 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.407 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a26928a]
[DEBUG] 2018-02-27 19:03:12.408 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757194dc]
[DEBUG] 2018-02-27 19:03:12.409 [main] MetamodelGraphWalker - Visiting attribute path : stats.deck
[DEBUG] 2018-02-27 19:03:12.409 [main] MetamodelGraphWalker - Property path deemed to be circular : stats.deck
[DEBUG] 2018-02-27 19:03:12.410 [main] MetamodelGraphWalker - Visiting attribute path : stats.description
[DEBUG] 2018-02-27 19:03:12.410 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.410 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.412 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(stats)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.hearthstone.entity.Deck.stats)
                - SQL table alias mapping - stats1_
                - alias suffix - 1_
                - suffixed key columns - {deck_id3_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.hearthstone.entity.Stats)
                      - SQL table alias mapping - stats1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2018-02-27 19:03:12.412 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [NONE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:03:12.412 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27e32fe4]
[DEBUG] 2018-02-27 19:03:12.412 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.412 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.412 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.412 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.412 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.412 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17d238b1]
[DEBUG] 2018-02-27 19:03:12.413 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7cc3cb]
[DEBUG] 2018-02-27 19:03:12.413 [main] MetamodelGraphWalker - Visiting attribute path : stats.deck
[DEBUG] 2018-02-27 19:03:12.413 [main] MetamodelGraphWalker - Property path deemed to be circular : stats.deck
[DEBUG] 2018-02-27 19:03:12.413 [main] MetamodelGraphWalker - Visiting attribute path : stats.description
[DEBUG] 2018-02-27 19:03:12.413 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.413 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.413 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(stats)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.hearthstone.entity.Deck.stats)
                - SQL table alias mapping - stats1_
                - alias suffix - 1_
                - suffixed key columns - {deck_id3_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.hearthstone.entity.Stats)
                      - SQL table alias mapping - stats1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}

[DEBUG] 2018-02-27 19:03:12.413 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [READ]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:03:12.413 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b7d1df8]
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41d7b27f]
[DEBUG] 2018-02-27 19:03:12.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49096b06]
[DEBUG] 2018-02-27 19:03:12.414 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.414 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.414 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:03:12.414 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a183d02]
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.414 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.414 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@213deac2]
[DEBUG] 2018-02-27 19:03:12.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23eee4b8]
[DEBUG] 2018-02-27 19:03:12.415 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.415 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.415 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:03:12.415 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE_NOWAIT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28952dea]
[DEBUG] 2018-02-27 19:03:12.415 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.415 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.415 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.415 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.415 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@143d9a93]
[DEBUG] 2018-02-27 19:03:12.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40226788]
[DEBUG] 2018-02-27 19:03:12.415 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.415 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.416 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:03:12.416 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [UPGRADE_SKIPLOCKED]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.416 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4159e81b]
[DEBUG] 2018-02-27 19:03:12.416 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.416 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.416 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.416 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.416 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.416 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23cd4ff2]
[DEBUG] 2018-02-27 19:03:12.416 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70807224]
[DEBUG] 2018-02-27 19:03:12.416 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.416 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.417 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:03:12.417 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [FORCE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
[DEBUG] 2018-02-27 19:03:12.417 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.417 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.417 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.417 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.417 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9f6e406]
[DEBUG] 2018-02-27 19:03:12.417 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a94b64e]
[DEBUG] 2018-02-27 19:03:12.417 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.417 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.418 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:03:12.418 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_READ]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? lock in share mode
[DEBUG] 2018-02-27 19:03:12.418 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
[DEBUG] 2018-02-27 19:03:12.418 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.418 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.418 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.418 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.418 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.418 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2caf6912]
[DEBUG] 2018-02-27 19:03:12.418 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d69c0f]
[DEBUG] 2018-02-27 19:03:12.418 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.418 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.418 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:03:12.419 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_WRITE]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.419 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
[DEBUG] 2018-02-27 19:03:12.419 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.419 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.419 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.419 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.419 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.419 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a31c2ee]
[DEBUG] 2018-02-27 19:03:12.419 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d400943]
[DEBUG] 2018-02-27 19:03:12.419 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.419 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.419 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:03:12.428 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [PESSIMISTIC_FORCE_INCREMENT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=? for update
[DEBUG] 2018-02-27 19:03:12.428 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
[DEBUG] 2018-02-27 19:03:12.428 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.428 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.428 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.428 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.428 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.428 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@759d81f3]
[DEBUG] 2018-02-27 19:03:12.429 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@781a9412]
[DEBUG] 2018-02-27 19:03:12.430 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.430 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.430 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:03:12.430 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [OPTIMISTIC]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=?
[DEBUG] 2018-02-27 19:03:12.430 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
[DEBUG] 2018-02-27 19:03:12.430 [main] MetamodelGraphWalker - Visiting attribute path : card_set
[DEBUG] 2018-02-27 19:03:12.430 [main] MetamodelGraphWalker - Visiting attribute path : mana_cost
[DEBUG] 2018-02-27 19:03:12.430 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-02-27 19:03:12.430 [main] MetamodelGraphWalker - Visiting attribute path : rarity
[DEBUG] 2018-02-27 19:03:12.430 [main] MetamodelGraphWalker - Visiting attribute path : stats
[DEBUG] 2018-02-27 19:03:12.430 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@aed0151]
[DEBUG] 2018-02-27 19:03:12.430 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@267bbe1a]
[DEBUG] 2018-02-27 19:03:12.430 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.431 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.431 [main] LoadPlanTreePrinter - LoadPlan(entity=com.hearthstone.entity.Deck)
    - Returns
       - EntityReturnImpl(entity=com.hearthstone.entity.Deck, querySpaceUid=<gen:0>, path=com.hearthstone.entity.Deck)
          - CollectionAttributeFetchImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:1>, path=com.hearthstone.entity.Deck.stats)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:2>, path=com.hearthstone.entity.Deck.stats.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hearthstone.entity.Deck)
          - SQL table alias mapping - deck0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-27 19:03:12.431 [main] EntityLoader - Static select for entity com.hearthstone.entity.Deck [OPTIMISTIC_FORCE_INCREMENT]: select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_ from deck deck0_ where deck0_.id=?
[DEBUG] 2018-02-27 19:03:12.432 [main] Loader - Static select for action ACTION_MERGE on entity com.hearthstone.entity.Deck: select deck0_.id as id1_0_1_, deck0_.card_set as card_set2_0_1_, deck0_.mana_cost as mana_cos3_0_1_, deck0_.name as name4_0_1_, deck0_.rarity as rarity5_0_1_, stats1_.deck_id as deck_id3_1_3_, stats1_.id as id1_1_3_, stats1_.id as id1_1_0_, stats1_.deck_id as deck_id3_1_0_, stats1_.description as descript2_1_0_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:03:12.432 [main] Loader - Static select for action ACTION_REFRESH on entity com.hearthstone.entity.Deck: select deck0_.id as id1_0_1_, deck0_.card_set as card_set2_0_1_, deck0_.mana_cost as mana_cos3_0_1_, deck0_.name as name4_0_1_, deck0_.rarity as rarity5_0_1_, stats1_.deck_id as deck_id3_1_3_, stats1_.id as id1_1_3_, stats1_.id as id1_1_0_, stats1_.deck_id as deck_id3_1_0_, stats1_.description as descript2_1_0_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:03:12.435 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c41d037]
[DEBUG] 2018-02-27 19:03:12.436 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2234078]
[DEBUG] 2018-02-27 19:03:12.436 [main] MetamodelGraphWalker - Visiting attribute path : deck
[DEBUG] 2018-02-27 19:03:12.436 [main] MetamodelGraphWalker - Property path deemed to be circular : deck
[DEBUG] 2018-02-27 19:03:12.436 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-02-27 19:03:12.436 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-27 19:03:12.438 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-27 19:03:12.438 [main] LoadPlanTreePrinter - LoadPlan(collection=com.hearthstone.entity.Deck.stats)
    - Returns
       - CollectionReturnImpl(collection=com.hearthstone.entity.Deck.stats, querySpaceUid=<gen:0>, path=[com.hearthstone.entity.Deck.stats])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.hearthstone.entity.Stats, querySpaceUid=<gen:1>, path=[com.hearthstone.entity.Deck.stats].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.hearthstone.entity.Deck.stats)
          - SQL table alias mapping - stats0_
          - alias suffix - 0_
          - suffixed key columns - {deck_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.hearthstone.entity.Stats)
                - SQL table alias mapping - stats0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2018-02-27 19:03:12.438 [main] CollectionLoader - Static select for collection com.hearthstone.entity.Deck.stats: select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:03:12.456 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-02-27 19:03:12.456 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-02-27 19:03:12.457 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-02-27 19:03:12.459 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-02-27 19:03:12.460 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-02-27 19:03:12.460 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-02-27 19:03:12.462 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7808fb9
[DEBUG] 2018-02-27 19:03:12.463 [main] SessionFactoryRegistry - Registering SessionFactory: 8e91b894-2f4e-4f5b-a535-5e276a8ab870 (<unnamed>)
[DEBUG] 2018-02-27 19:03:12.463 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-02-27 19:03:12.633 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-02-27 19:03:12.685 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:03:12.857 [main] CollectionLoadContext - No collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:12.858 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:12.858 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#4
[DEBUG] 2018-02-27 19:03:12.858 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:12.862 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:03:13.009 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:03:13.084 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-02-27 19:03:13.099 [main] SQL - insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-02-27 19:03:13.120 [main] IdentifierGeneratorHelper - Natively generated identity: 12
[DEBUG] 2018-02-27 19:03:13.120 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.137 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-02-27 19:03:13.138 [main] SQL - insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-02-27 19:03:13.141 [main] IdentifierGeneratorHelper - Natively generated identity: 8
[DEBUG] 2018-02-27 19:03:13.143 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.152 [main] TransactionImpl - committing
[DEBUG] 2018-02-27 19:03:13.153 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-27 19:03:13.158 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-27 19:03:13.186 [main] Collections - Collection found: [com.hearthstone.entity.Deck.stats#12], was: [<unreferenced>] (initialized)
[DEBUG] 2018-02-27 19:03:13.204 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2018-02-27 19:03:13.204 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-02-27 19:03:13.207 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-27 19:03:13.207 [main] EntityPrinter - com.hearthstone.entity.Stats{deck=com.hearthstone.entity.Deck#12, description=Stat1, id=8}
[DEBUG] 2018-02-27 19:03:13.207 [main] EntityPrinter - com.hearthstone.entity.Deck{card_set=Basic, stats=[com.hearthstone.entity.Stats#8], mana_cost=4, name=Auchenai Soulpriest, id=12, rarity=Rare}
[DEBUG] 2018-02-27 19:03:13.222 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.223 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.272 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:03:13.290 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.297 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.358 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#12]
[DEBUG] 2018-02-27 19:03:13.361 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#12]
[DEBUG] 2018-02-27 19:03:13.361 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#12]
[DEBUG] 2018-02-27 19:03:13.361 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#8]
[DEBUG] 2018-02-27 19:03:13.361 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#8]
[DEBUG] 2018-02-27 19:03:13.361 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.362 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#12]
[DEBUG] 2018-02-27 19:03:13.362 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.364 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.364 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#12
[DEBUG] 2018-02-27 19:03:13.364 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.412 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:03:13.414 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.420 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.421 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.hearthstone.entity.Deck.stats#2]
[DEBUG] 2018-02-27 19:03:13.421 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#2]
[DEBUG] 2018-02-27 19:03:13.422 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#2]
[DEBUG] 2018-02-27 19:03:13.422 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.422 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#2]
[DEBUG] 2018-02-27 19:03:13.422 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.422 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.423 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#2
[DEBUG] 2018-02-27 19:03:13.424 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.452 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:03:13.455 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-02-27 19:03:13.455 [main] SQL - insert into deck (card_set, mana_cost, name, rarity) values (?, ?, ?, ?)
[DEBUG] 2018-02-27 19:03:13.456 [main] IdentifierGeneratorHelper - Natively generated identity: 13
[DEBUG] 2018-02-27 19:03:13.456 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.456 [main] TransactionImpl - committing
[DEBUG] 2018-02-27 19:03:13.461 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-27 19:03:13.461 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-27 19:03:13.461 [main] Collections - Collection found: [com.hearthstone.entity.Deck.stats#13], was: [<unreferenced>] (initialized)
[DEBUG] 2018-02-27 19:03:13.461 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-02-27 19:03:13.461 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-02-27 19:03:13.461 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-27 19:03:13.461 [main] EntityPrinter - com.hearthstone.entity.Deck{card_set=Basic, stats=[], mana_cost=4, name=Auchenai Soulpriest, id=13, rarity=Rare}
[DEBUG] 2018-02-27 19:03:13.466 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.466 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.467 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:03:13.467 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.468 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.468 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.hearthstone.entity.Deck.stats#13]
[DEBUG] 2018-02-27 19:03:13.468 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#13]
[DEBUG] 2018-02-27 19:03:13.468 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#13]
[DEBUG] 2018-02-27 19:03:13.468 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.468 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#13]
[DEBUG] 2018-02-27 19:03:13.468 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.468 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.468 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#13
[DEBUG] 2018-02-27 19:03:13.468 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.526 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:03:13.528 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.528 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#1
[DEBUG] 2018-02-27 19:03:13.529 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.529 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:03:13.623 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:03:13.633 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.634 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.635 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#2]
[DEBUG] 2018-02-27 19:03:13.635 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#2]
[DEBUG] 2018-02-27 19:03:13.635 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#6]
[DEBUG] 2018-02-27 19:03:13.635 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#6]
[DEBUG] 2018-02-27 19:03:13.636 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.643 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-02-27 19:03:13.643 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:03:13.656 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-02-27 19:03:13.656 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.656 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-02-27 19:03:13.657 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.657 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#6]
[DEBUG] 2018-02-27 19:03:13.657 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.657 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.658 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-02-27 19:03:13.658 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#2
[DEBUG] 2018-02-27 19:03:13.658 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.703 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:03:13.705 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.706 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.706 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#4]
[DEBUG] 2018-02-27 19:03:13.706 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#4]
[DEBUG] 2018-02-27 19:03:13.706 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#8]
[DEBUG] 2018-02-27 19:03:13.709 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#8]
[DEBUG] 2018-02-27 19:03:13.710 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.710 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:03:13.710 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:03:13.716 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:03:13.716 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.717 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:03:13.717 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.717 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:03:13.717 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.717 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.717 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-02-27 19:03:13.717 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#4
[DEBUG] 2018-02-27 19:03:13.717 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.718 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:03:13.743 [main] TransactionImpl - committing
[DEBUG] 2018-02-27 19:03:13.743 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-27 19:03:13.743 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-27 19:03:13.744 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-02-27 19:03:13.744 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-02-27 19:03:13.744 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-27 19:03:13.744 [main] EntityPrinter - com.hearthstone.entity.Stats{deck=com.hearthstone.entity.Deck#8, description=Puyo, id=4}
[DEBUG] 2018-02-27 19:03:13.770 [main] SQL - update stats set deck_id=?, description=? where id=?
[DEBUG] 2018-02-27 19:03:13.777 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.778 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.778 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-02-27 19:03:13.779 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:03:13.781 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.782 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.782 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#4]
[DEBUG] 2018-02-27 19:03:13.782 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#4]
[DEBUG] 2018-02-27 19:03:13.782 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#8]
[DEBUG] 2018-02-27 19:03:13.782 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#8]
[DEBUG] 2018-02-27 19:03:13.782 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.783 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:03:13.783 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:03:13.784 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:03:13.784 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.784 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:03:13.784 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.785 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#8]
[DEBUG] 2018-02-27 19:03:13.785 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.785 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.785 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-02-27 19:03:13.785 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#4
[DEBUG] 2018-02-27 19:03:13.785 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.824 [main] SQL - select deck0_.id as id1_0_0_, deck0_.card_set as card_set2_0_0_, deck0_.mana_cost as mana_cos3_0_0_, deck0_.name as name4_0_0_, deck0_.rarity as rarity5_0_0_, stats1_.deck_id as deck_id3_1_1_, stats1_.id as id1_1_1_, stats1_.id as id1_1_2_, stats1_.deck_id as deck_id3_1_2_, stats1_.description as descript2_1_2_ from deck deck0_ left outer join stats stats1_ on deck0_.id=stats1_.deck_id where deck0_.id=?
[DEBUG] 2018-02-27 19:03:13.858 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.859 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.859 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-02-27 19:03:13.859 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.859 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.859 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-02-27 19:03:13.859 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.860 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.860 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-02-27 19:03:13.860 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-02-27 19:03:13.860 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#3]
[DEBUG] 2018-02-27 19:03:13.860 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#3]
[DEBUG] 2018-02-27 19:03:13.860 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#5]
[DEBUG] 2018-02-27 19:03:13.860 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#5]
[DEBUG] 2018-02-27 19:03:13.860 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#7]
[DEBUG] 2018-02-27 19:03:13.860 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#7]
[DEBUG] 2018-02-27 19:03:13.860 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.860 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.860 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.861 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.861 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Deck#1
[DEBUG] 2018-02-27 19:03:13.861 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.862 [main] TransactionImpl - begin
[DEBUG] 2018-02-27 19:03:13.865 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-02-27 19:03:13.865 [main] SQL - insert into stats (deck_id, description) values (?, ?)
[DEBUG] 2018-02-27 19:03:13.865 [main] IdentifierGeneratorHelper - Natively generated identity: 9
[DEBUG] 2018-02-27 19:03:13.866 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.866 [main] TransactionImpl - committing
[DEBUG] 2018-02-27 19:03:13.866 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-27 19:03:13.866 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-27 19:03:13.866 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-02-27 19:03:13.866 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-02-27 19:03:13.866 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-27 19:03:13.866 [main] EntityPrinter - com.hearthstone.entity.Stats{deck=com.hearthstone.entity.Deck#1, description=Control, id=9}
[DEBUG] 2018-02-27 19:03:13.871 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.871 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-27 19:03:13.872 [main] SQL - select stats0_.id as id1_1_0_, stats0_.deck_id as deck_id3_1_0_, stats0_.description as descript2_1_0_, deck1_.id as id1_0_1_, deck1_.card_set as card_set2_0_1_, deck1_.mana_cost as mana_cos3_0_1_, deck1_.name as name4_0_1_, deck1_.rarity as rarity5_0_1_ from stats stats0_ left outer join deck deck1_ on stats0_.deck_id=deck1_.id where stats0_.id=?
[DEBUG] 2018-02-27 19:03:13.894 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.894 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-27 19:03:13.900 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#9]
[DEBUG] 2018-02-27 19:03:13.900 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#9]
[DEBUG] 2018-02-27 19:03:13.900 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-02-27 19:03:13.900 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Deck#1]
[DEBUG] 2018-02-27 19:03:13.900 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.900 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.900 [main] SQL - select stats0_.deck_id as deck_id3_1_0_, stats0_.id as id1_1_0_, stats0_.id as id1_1_1_, stats0_.deck_id as deck_id3_1_1_, stats0_.description as descript2_1_1_ from stats stats0_ where stats0_.deck_id=?
[DEBUG] 2018-02-27 19:03:13.921 [main] ResultSetProcessorImpl - Preparing collection intializer : [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.922 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-27 19:03:13.923 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.923 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-02-27 19:03:13.923 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.923 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-02-27 19:03:13.923 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.923 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-02-27 19:03:13.923 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.923 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#3]
[DEBUG] 2018-02-27 19:03:13.924 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#3]
[DEBUG] 2018-02-27 19:03:13.924 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#5]
[DEBUG] 2018-02-27 19:03:13.924 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#5]
[DEBUG] 2018-02-27 19:03:13.924 [main] TwoPhaseLoad - Resolving associations for [com.hearthstone.entity.Stats#7]
[DEBUG] 2018-02-27 19:03:13.924 [main] TwoPhaseLoad - Done materializing entity [com.hearthstone.entity.Stats#7]
[DEBUG] 2018-02-27 19:03:13.924 [main] CollectionLoadContext - 1 collections were found in result set for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.924 [main] CollectionLoadContext - Collection fully initialized: [com.hearthstone.entity.Deck.stats#1]
[DEBUG] 2018-02-27 19:03:13.924 [main] CollectionLoadContext - 1 collections initialized for role: com.hearthstone.entity.Deck.stats
[DEBUG] 2018-02-27 19:03:13.924 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-27 19:03:13.924 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-02-27 19:03:13.924 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.hearthstone.entity.Stats#9
[DEBUG] 2018-02-27 19:03:13.924 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
